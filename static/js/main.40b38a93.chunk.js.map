{"version":3,"sources":["Images/cog.svg","Images/c-programming.png","Images/cryingboy.svg","Utils/index.js","components/CodeStatus.js","components/ButtonPanel.js","Utils/Parser.js","components/WaitingScreen.js","components/ASTVisualizer.js","components/FrontPage.js","components/ErrorHandler.js","Utils/Tabs.js","ASMComponents/vpslldq.js","ASMComponents/vpaddd.js","ASMComponents/ret.js","ASMComponents/UnsupportedCommand.js","ASMComponents/Function.js","components/ASMVisualizer.js","components/App.js","Utils/Compiler.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","getFlatColors","main","getComputedStyle","document","documentElement","getPropertyValue","darkMain","one","two","three","four","five","gray","clearTextColor","DarkTextColor","Status","styled","div","_templateObject","_ref","bg","CodeStatus","_ref2","_ref2$status","status","color","message","react_default","a","createElement","ButtonPanelContainer","ButtonPanel_templateObject","Top","_templateObject2","Buttons","_templateObject3","ButtonPanel","visualize","serialize","restart","_ref$disabled","disabled","onClick","testASR","Node","type","name","line","Object","classCallCheck","this","functionName","Cog","WaitingScreen_templateObject","url","WaitingScreen","react_anime_default","loop","easing","rotate","duration","cog","getChildren","node","body","declarations","init","id","expression","left","right","callee","arguments","object","property","properties","key","value","argument","test","consequent","alternate","getLabel","raw","operator","params1","_","params","join","params2","AstVisualizer","props","_this","possibleConstructorReturn","getPrototypeOf","call","recursiveBuilder","children","tree","forEach","child","push","title","expanded","start","end","buildTree","ast","highlightCode","codeEditor","cm","editor","doc","fromIndex","posFromIndex","toIndex","markText","className","clearHighlightedCode","getAllMarks","m","clear","state","treeData","setState","nextProps","_this2","index_esm","onChange","canDrag","generateNodeProps","onMouseEnter","onMouseLeave","Component","Image","FrontPage_templateObject","AppTitle","FrontPage_templateObject2","AppDescription","FrontPage_templateObject3","Container","_templateObject4","FrontPage","direction","scale","delay","CLogo","ErrorPageContainer","ErrorHandler_templateObject","TextJumbo","ErrorHandler_templateObject2","ErrorMessage","ErrorHandler_templateObject3","ErrorPosition","ErrorHandler_templateObject4","Robot","img","_templateObject5","ErrorHandler","error","tag","lineLength","getLine","length","ch","getErrorMessage","text","getErrorPosition","column","console","log","src","SadRobot","Tabs","_Component","_getPrototypeOf2","_len","args","Array","_key","apply","concat","selected","handleClick","index","event","preventDefault","_renderTitles","map","activeClass","href","bind","label","assertThisInitialized","_renderContent","inherits","createClass","nextState","Pane","_Component2","NB_COLS","COL_SIZE","vpslldq_templateObject","TD","td","vpslldq_templateObject2","TdNumbers","vpslldq_templateObject3","TdZeroes","vpslldq_templateObject4","TrNumbers","tr","vpslldq_templateObject5","Vpslldq","vpslldq_Container","cells","i","getCells","translateX","getNumbers","translateY","qty","getZeroes","Vpaddd","Ret","UnsupportedCommand","FunctionContainer","Function_templateObject","FunctionName","Function_templateObject2","FunctionBody","Function_templateObject3","Function","AsmVisualizer","buildGraphicStack","stack","asm","func","idx","commands","c","commandFactory","App_templateObject","LeftContainer","App_templateObject2","RightContainer","App_templateObject3","App","code","disableButtons","compiling","clangAst","handleClear","clearCode","undefined","callback","JSON","parse","getValue","rawAsm","currentFunction","exec","command","trim","replace","split","slice","source","generateASM","request","method","headers","content-type","json","compiler","options","userArguments","compilerOptions","produceGccDump","produceCfg","produceAst","filters","binary","execute","labels","directives","commentOnly","intel","demangle","lang","response","stderr","astOutput","frontPage","waitingScreen","_this$state","rightPage","components_ErrorHandler","keys","Tabs_Tabs","Tabs_Pane","ASMVisualizer","components_ASTVisualizer","App_Container","react_codemirror2","ref","mode","theme","lineNumbers","lineWrapping","gutters","onBeforeChange","data","onPaste","Boolean","window","location","hostname","match","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.40b38a93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cog.a08a6ab0.svg\";","module.exports = __webpack_public_path__ + \"static/media/c-programming.562eee74.png\";","module.exports = __webpack_public_path__ + \"static/media/cryingboy.5b495fa1.svg\";","export function getFlatColors() {\n    return {\n        main: getComputedStyle(document.documentElement).getPropertyValue('--main'),\n        darkMain: getComputedStyle(document.documentElement).getPropertyValue('--dark-main'),\n        one: getComputedStyle(document.documentElement).getPropertyValue('--one'),\n        two: getComputedStyle(document.documentElement).getPropertyValue('--two'),\n        three: getComputedStyle(document.documentElement).getPropertyValue('--three'),\n        four: getComputedStyle(document.documentElement).getPropertyValue('--four'),\n        five: getComputedStyle(document.documentElement).getPropertyValue('--five'),\n        gray: getComputedStyle(document.documentElement).getPropertyValue('--gray'),\n        clearTextColor: getComputedStyle(document.documentElement).getPropertyValue('--clear-text-color'),\n        DarkTextColor: getComputedStyle(document.documentElement).getPropertyValue('--dark-text-color')\n    }\n}","import React from \"react\";\nimport styled from 'styled-components'\nimport {getFlatColors} from \"../Utils\";\n\nconst Status = styled.div`\n  background: ${({bg}) => bg};\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  font-weight: 300\n  font-size: 14px;\n  padding: 5px;\n  padding-left: 10px;\n  margin-bottom: 5px;\n\n  > span {\n    font-weight: 500;\n    margin-left: 10px;\n  }\n\n  @media (max-width: 700px) {\n    font-size: 8px;\n  }\n`\n\nexport default function CodeStatus({status = 'compiles'}) {\n    let color = '';\n    let message = '';\n    if (status === 'compiles') {\n        color = getFlatColors().five;\n        message = 'Code status: Compiles..';\n    }\n    else if (status === 'error') {\n        color = getFlatColors().two;\n        message = 'Code status: Error..';\n    }\n    else if (status === 'warning') {\n        color = getFlatColors().four;\n        message = 'Code status: warning..';\n    }\n\n    return (\n        <Status bg={color}>\n            {message}\n        </Status>\n    );\n}","import React from 'react';\nimport styled from 'styled-components'\nimport CodeStatus from \"./CodeStatus\";\n\nconst ButtonPanelContainer = styled.div`\n  background: #1F292E;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst Top = styled.div`\n  padding: 3px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 10px;\n`\n\nconst Buttons = styled.div`\n  > button {\n    border: none;\n    background: none;\n    color: #fff;\n    font-size: 18px;\n    padding: 8px;\n    text-shadow: -1px -1px 1px rgba(255,255,255,.1), 1px 1px 1px rgba(0,0,0,.5);\n\n    @media (max-width: 700px) {\n      font-size: 10px;\n    }\n  }\n\n  > button:hover {\n    color: #fff;\n    cursor: pointer;\n  }\n\n  > button:disabled {\n    color: #919191;\n  }\n\n  > button:active {\n    color: #fff;\n    text-shadow: none;\n  }\n`\n\nexport default function ButtonPanel({visualize, serialize, restart, disabled = false, status}) {\n    return (\n        <ButtonPanelContainer>\n            <Top>\n                <Buttons>\n                    <button disabled={disabled} onClick={visualize}>Visualize</button>\n                    <button onClick={serialize}>Serialize</button>\n                    <button onClick={restart}>Restart</button>\n                </Buttons>\n            </Top>\n            <CodeStatus status={status}/>\n        </ButtonPanelContainer>\n    );\n}","//import * as acorn from \"acorn\";\n\n\nconst testASR = `{\"type\": \"Program\",\\n  \"start\": 0,\\n  \"end\": 198,\\n  \"body\": [\\n    {\\n      \"type\": \"ImportDeclaration\",\\n      \"start\": 0,\\n      \"end\": 20,\\n      \"specifiers\": [],\\n      \"source\": {\\n        \"type\": \"Literal\",\\n        \"start\": 7,\\n        \"end\": 20,\\n        \"value\": \"x86intrin.h\",\\n        \"raw\": \"\\\\\"x86intrin.h\\\\\"\"\\n      }\\n    },\\n    {\\n      \"type\": \"FunctionDeclaration\",\\n      \"start\": 22,\\n      \"end\": 198,\\n      \"id\": {\\n        \"type\": \"Identifier\",\\n        \"start\": 31,\\n        \"end\": 40,\\n        \"name\": \"PrefixSum\"\\n      },\\n      \"generator\": false,\\n      \"expression\": false,\\n      \"params\": [\\n        {\\n          \"type\": \"Identifier\",\\n          \"start\": 41,\\n          \"end\": 45,\\n          \"name\": \"curr\"\\n        }\\n      ],\\n      \"body\": {\\n        \"type\": \"BlockStatement\",\\n        \"start\": 47,\\n        \"end\": 198,\\n        \"body\": [\\n          {\\n            \"type\": \"VariableDeclaration\",\\n            \"start\": 53,\\n            \"end\": 87,\\n            \"declarations\": [\\n              {\\n                \"type\": \"VariableDeclarator\",\\n                \"start\": 57,\\n                \"end\": 86,\\n                \"id\": {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 57,\\n                  \"end\": 60,\\n                  \"name\": \"Add\"\\n                },\\n                \"init\": {\\n                  \"type\": \"CallExpression\",\\n                  \"start\": 63,\\n                  \"end\": 86,\\n                  \"callee\": {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 63,\\n                    \"end\": 77,\\n                    \"name\": \"_mm_slli_si128\"\\n                  },\\n                  \"arguments\": [\\n                    {\\n                      \"type\": \"Identifier\",\\n                      \"start\": 78,\\n                      \"end\": 82,\\n                      \"name\": \"curr\"\\n                    },\\n                    {\\n                      \"type\": \"Literal\",\\n                      \"start\": 84,\\n                      \"end\": 85,\\n                      \"value\": 4,\\n                      \"raw\": \"4\"\\n                    }\\n                  ]\\n                }\\n              }\\n            ],\\n            \"kind\": \"let\"\\n          },\\n          {\\n            \"type\": \"ExpressionStatement\",\\n            \"start\": 92,\\n            \"end\": 124,\\n            \"expression\": {\\n              \"type\": \"AssignmentExpression\",\\n              \"start\": 92,\\n              \"end\": 123,\\n              \"operator\": \"=\",\\n              \"left\": {\\n                \"type\": \"Identifier\",\\n                \"start\": 92,\\n                \"end\": 96,\\n                \"name\": \"curr\"\\n              },\\n              \"right\": {\\n                \"type\": \"CallExpression\",\\n                \"start\": 99,\\n                \"end\": 123,\\n                \"callee\": {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 99,\\n                  \"end\": 112,\\n                  \"name\": \"_mm_add_epi32\"\\n                },\\n                \"arguments\": [\\n                  {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 113,\\n                    \"end\": 117,\\n                    \"name\": \"curr\"\\n                  },\\n                  {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 119,\\n                    \"end\": 122,\\n                    \"name\": \"Add\"\\n                  }\\n                ]\\n              }\\n            }\\n          },\\n          {\\n            \"type\": \"ExpressionStatement\",\\n            \"start\": 129,\\n            \"end\": 159,\\n            \"expression\": {\\n              \"type\": \"AssignmentExpression\",\\n              \"start\": 129,\\n              \"end\": 158,\\n              \"operator\": \"=\",\\n              \"left\": {\\n                \"type\": \"Identifier\",\\n                \"start\": 129,\\n                \"end\": 132,\\n                \"name\": \"Add\"\\n              },\\n              \"right\": {\\n                \"type\": \"CallExpression\",\\n                \"start\": 135,\\n                \"end\": 158,\\n                \"callee\": {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 135,\\n                  \"end\": 149,\\n                  \"name\": \"_mm_slli_si128\"\\n                },\\n                \"arguments\": [\\n                  {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 150,\\n                    \"end\": 154,\\n                    \"name\": \"curr\"\\n                  },\\n                  {\\n                    \"type\": \"Literal\",\\n                    \"start\": 156,\\n                    \"end\": 157,\\n                    \"value\": 8,\\n                    \"raw\": \"8\"\\n                  }\\n                ]\\n              }\\n            }\\n          },\\n          {\\n            \"type\": \"ReturnStatement\",\\n            \"start\": 164,\\n            \"end\": 196,\\n            \"argument\": {\\n              \"type\": \"CallExpression\",\\n              \"start\": 171,\\n              \"end\": 195,\\n              \"callee\": {\\n                \"type\": \"Identifier\",\\n                \"start\": 171,\\n                \"end\": 184,\\n                \"name\": \"_mm_add_epi32\"\\n              },\\n              \"arguments\": [\\n                {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 185,\\n                  \"end\": 189,\\n                  \"name\": \"curr\"\\n                },\\n                {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 191,\\n                  \"end\": 194,\\n                  \"name\": \"Add\"\\n                }\\n              ]\\n            }\\n          }\\n        ]\\n      }\\n    }\\n  ],\\n  \"sourceType\": \"module\"\\n}`\nclass Node {\n    constructor(type, name, line) {\n        this.type = type;\n        this.name = name;\n        this.line = line;\n    }\n}\n\nexport function generateAST(editor) {\n    //let code = editor.doc.getValue();\n    // code = cleanExpression(code);\n    // let ast = new Node(\"Program\", 0, code.length);\n    // ast.body = recursiveASTBuilder(code, 0, 0);\n\n    //code = code.replace(new RegExp('int', 'g'), 'let');\n\n    //return acorn.parse(code)\n\n    //Temporary.. We disable AST parsing.. We\"ll come back to AST later.\n    return JSON.parse(testASR)\n}\n\nconst functionName = /([a-zA-Z]+): # @.*/;\n\n\nexport function generateASM(rawAsm) {\n    let asm = [];\n    let currentFunction = {};\n    rawAsm.forEach(line => {\n        if (functionName.test(line.text)) {\n            let name = functionName.exec(line.text)[1];\n            currentFunction = new Node(\"Function\", name, 0);\n            currentFunction.body = [];\n            asm.push(currentFunction);\n        }\n        else if (line.text.length > 0) {\n            // Remove comments, commas, trim it and then split\n            let command = line.text.trim().replace(/,| #.*/g, '').split(\" \");\n            let name = command[0];\n            let params = command.slice(1, command.length);\n\n            let node = new Node(\"Command\", name, line.source.line);\n            node.params = params;\n            currentFunction.body.push(node);\n        }\n    });\n    return asm\n}\n\n\n// function recursiveASTBuilder(code, start) {\n//     let ast = [];\n//\n//     if (isAssignExpr(code)) {\n//         let tokens = getAssignExpr(code);\n//         let end = start + code.length;\n//         let node = new Node(\"VariableDeclaration\", start, end)\n//         node.kind = tokens[1];\n//         console.log(tokens);\n//         ast.push(node)\n//     }\n//     if (isFuncDeclaration(code)) {\n//         let tokens = getFuncDeclaration(code);\n//         let end = start + code.length;\n//         let node = new Node(\"FunctionDeclaration\", start, end)\n//         ast.push(node)\n//     }\n//     if (isFuncCall(code)) {\n//         let tokens = getFuncCall(code);\n//         let end = start + code.length;\n//         let node = new Node(\"FunctionCall\", start, end)\n//         ast.push(node)\n//     }\n//     if (isReturnExpr(code)) {\n//         let tokens = getReturnExpr(code);\n//         let end = start + code.length;\n//         let node = new Node(\"ReturnExpression\", start, end)\n//         ast.push(node)\n//     }\n//\n//\n//     return ast;\n// }\n//\n// function cleanExpression(s){ //just supress superfluous space and other invisible characters\n//     return (s.replace(/\\s{1,}/g, ' ')).trim();\n// }\n//\n// function extractExpression(s){     //this function extract the different expressions of a given c code, by expression we mean a piece of code situated after a ';' or a '{' and ended either by ';' or by '}'.This extract the expressions at the \"same level\"\n//     s=cleanExpression(s);\n//     var accoladeIndication=0;\n//     var expresions=[];\n//     const delimiters=new Set([';', '}']);\n//     var i=s.indexOf('{')+1,lengthS=s.lastIndexOf('}'); // we first determine the begining and the ending of the piece of c code\n//     var  semicolonPosition=i;\n//     while(i<lengthS){\n//         if (s[i]==='{'){\n//             accoladeIndication++; //indicates if we are not inside an expression\n//         }\n//         if (s[i]==='}'){\n//             accoladeIndication--;\n//         }\n//\n//         if(delimiters.has(s[i]) && accoladeIndication === 0){ // if the caracter is a delimiter of expression and if we are not inside an expression\n//             expresions.push((s.slice(semicolonPosition+1, i)).trim()) //we extract the expression begining from the last delimiter to this delimiter\n//             semicolonPosition=i; // we save the position of this delimiter\n//         }\n//         i++;\n//     }\n//     return expresions;\n// }\n//\n// function extractParameter(s){     //this function extract the different effective parameter of a c function (call function)\n//     s=cleanExpression(s);\n//     var semicolonIndication=0;\n//     var expresions=[];\n//     const delimiters=new Set([',']);\n//     var i=0,lengthS=s.length; // we first determine the begining and the ending of the parameter previously extracted\n//     var  semicolonPosition=i;\n//     while(i<lengthS){\n//         if (s[i]==='('){\n//             semicolonIndication++; //indicates if we are not inside an expression\n//         }\n//         if (s[i]===')'){\n//             semicolonIndication--;\n//         }\n//\n//         if(delimiters.has(s[i]) && semicolonIndication === 0){ // if the caracter is a delimiter of expression and if we are not inside an expression\n//             expresions.push((s.slice(semicolonPosition, i)).trim()) //we extract the expression begining from the last delimiter to this delimiter\n//             semicolonPosition=i+1; // we save the position of this delimiter\n//         }\n//         i++;\n//         if(i===lengthS){\n//             expresions.push((s.slice(semicolonPosition, i)).trim()) //to take the last string\n//         }\n//     }\n//     return expresions;\n// }\n//\n// function processCCode(cCode){\n//     var tab=[];\n//     if(isSimpleExpression(cCode)){\n//         tab=Array.of(cCode);\n//         return tab;\n//     }\n//     if(regexFunctionDeclar.test(cCode)){\n//         var t=extractExpression(cCode);\n//         t.push('body');\n//         tab=Array.of(regexFunctionDeclar.exec(cCode)[2], ['returntype',[regexFunctionDeclar.exec(cCode)[1]]],t.reverse());\n//         for(var j=1; j<tab[2].length; j++){\n//             if (isSimpleExpression(tab[2][j])){\n//                 tab[2][j]=Array.of(tab[2][j]);\n//                 continue;\n//             }\n//             else{\n//                 tab[2][j]=processCCode(tab[2][j]);\n//             }\n//\n//         }\n//         return tab;\n//     }\n//\n//     if(regexFunctionCall.test(cCode)){\n//         var paramString = regexFunctionCall.exec(cCode)[2]\n//         var t=extractParameter(paramString);\n//         t.push('parameters');\n//         tab=Array.of(regexFunctionCall.exec(cCode)[1], t.reverse());\n//         for(var j=1; j<tab[1].length; j++){\n//             if (isSimpleExpression(tab[1][j])){\n//                 tab[1][j]=Array.of(tab[1][j]);\n//                 continue;\n//             }\n//             else{\n//                 tab[1][j]=processCCode(tab[1][j]);\n//             }\n//\n//         }\n//         return tab;\n//     }\n//     if(regexAssignExpr.test(cCode)){\n//         var regArray = regexAssignExpr.exec(cCode)\n//         tab=Array.of('=',[regArray[2],[regArray[1]]], [regArray[3]]);\n//         if (isSimpleExpression(tab[2][0])){\n//             tab[2][0]=Array.of(tab[2][0]);\n//         }\n//         else\n//         {\n//             tab[2][0]=processCCode(tab[2][0]);\n//         }\n//\n//\n//         return tab;\n//     }\n//     if(regexReturnExpr.test(cCode)){\n//         tab=Array.of('return',[regexReturnExpr.exec(cCode)[1]]);\n//         if (isSimpleExpression(tab[1][0])){\n//             tab[1][0]=Array.of(tab[1][0]);\n//         }\n//         else\n//         {\n//             tab[1][0]=processCCode(tab[1][0]);\n//         }\n//\n//\n//         return tab;\n//     }\n//\n//\n// }\n//\n// function isSimpleExpression(s){\n//     return !(isFuncDeclaration(s)||isFuncCall(s)||isAssignExpr(s)||isReturnExpr(s));\n// }\n//\n// function identifyNatureOfExpr(s){\n//     var regex=/^\\s*(?:void|char|uint8_t|short|int|long|float|double|signed|unsigned|Bool|Complex|__m128|__m128d|__m128i|__m256|__m256d|__m256i|__m512|__m512d|__m512i)\\s+(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*\\(\\s*(?:void|char|uint8_t|short|int|long|float|double|signed|unsigned|Bool|Complex|__m128|__m128d|__m128i|__m256|__m256d|__m256i|__m512|__m512d|__m512i)\\s+(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*(?:,(?:void|char|uint8_t|short|int|long|float|double|signed|unsigned|Bool|Complex|__m128|__m128d|__m128i|__m256|__m256d|__m256i|__m512|__m512d|__m512i)\\s+(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*)*\\s*(?:\\)\\s*(?=\\{))/;\n// }\n//\n// const regexFunctionDeclar=/^\\s*([_$a-zA-Z][_$a-zA-Z0-9]*)\\s+([_$a-zA-Z][_$a-zA-Z0-9]*)\\s*\\(\\s*(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s+\\*?(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*(?:,(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s+\\*?(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*)*\\s*(?:\\)\\s*(?=\\{))/;\n// const regexFunctionCall=/^\\s*([_$a-zA-Z][_$a-zA-Z0-9]*)\\s*\\((.*)(?=\\)$|\\)(?=;))/;\n// const regexReturnExpr=/^\\s*return\\s+(.*)/;\n// const regexAssignExpr=/^\\s*(?:([_a-zA-Z][\\._a-zA-Z0-9]*)\\s+)?([\\*_$a-zA-Z][\\._a-zA-Z0-9]*)\\s*=\\s*(.*)/;\n//\n// function isFuncDeclaration(code) {\n//     return regexFunctionDeclar.test(code)\n// }\n// function isFuncCall(code) {\n//     return regexFunctionCall.test(code)\n// }\n// function isReturnExpr(code) {\n//     return regexReturnExpr.test(code)\n// }\n// function isAssignExpr(code) {\n//     return regexAssignExpr.test(code)\n// }\n// function getFuncDeclaration(code) {\n//     return regexFunctionDeclar.exec(code);\n// }\n// function getFuncCall(code) {\n//     return regexFunctionCall.exec(code);\n// }\n// function getReturnExpr(code) {\n//     return regexReturnExpr.exec(code);\n// }\n// function getAssignExpr(code) {\n//     return regexAssignExpr.exec(code);\n// }\n","import React from 'react';\nimport Anime from 'react-anime';\nimport styled from 'styled-components'\nimport cog from \"../Images/cog.svg\";\n\nconst Cog = styled.div`\n    content: ${({url}) => 'url(' + url + ');'}\n    height: 40vh;\n    margin: 30vh auto;\n    color: var(--dark-main)\n`\n\nexport default function WaitingScreen() {\n\n    return (\n                <Anime loop={true}\n                       easing={\"linear\"}\n                       rotate='360deg'\n                       duration={4000}>\n                    <Cog url={cog}/>\n                </Anime>\n    );\n}","import React, {Component} from 'react';\nimport * as _ from \"lodash\";\nimport SortableTree from \"react-sortable-tree\";\nimport 'react-sortable-tree/style.css';\nimport '../css/ASTVisualizer.css'\n\nlet getChildren = (node) => {\n\n    switch (node.type) {\n\n        case 'Program':\n            return node.body;\n\n        case 'VariableDeclaration':\n            return node.declarations;\n\n        case 'VariableDeclarator':\n            return node.init ? [node.id, node.init] : [node.id];\n\n        case 'ExpressionStatement':\n            return [node.expression];\n\n        case 'BinaryExpression':\n            return [node.left, node.right];\n\n        case 'AssignmentExpression':\n            return [node.left, node.right];\n\n        case 'CallExpression':\n            return [node.callee, {type: 'arguments', arguments: node.arguments}];\n\n        case 'arguments':\n            return node.arguments;\n\n        case 'MemberExpression':\n            return [node.object, node.property];\n\n        case 'NewExpression':\n            return node.arguments;\n\n        case 'ObjectExpression':\n            return node.properties;\n\n        case 'Property':\n            return [node.key, node.value];\n\n        case 'FunctionDeclaration':\n            return [node.body];\n\n        case 'FunctionExpression':\n            return [node.body];\n\n        case 'BlockStatement':\n            return node.body;\n\n        case 'ReturnStatement':\n            return node.argument ? [node.argument] : [];\n\n        case 'UnaryExpression':\n            return [node.argument];\n\n        case 'IfStatement':\n            return [node.test, node.consequent];\n\n        case 'ConditionalExpression':\n            return [node.test, node.consequent, node.alternate];\n\n        default:\n            return [];\n    }\n};\n\nlet getLabel = (node) => {\n\n    switch (node.type) {\n\n        case 'Identifier':\n            return node.name;\n\n        case 'Literal':\n            return node.raw;\n\n        case 'UnaryExpression':\n            return node.operator;\n\n        case 'BinaryExpression':\n            return node.operator;\n\n        case 'AssignmentExpression':\n            return node.operator;\n\n        case 'FunctionDeclaration':\n            var params1 = _.map(node.params, 'name').join(',');\n            return 'function ' + (!(!(node.id && node.id.name) && !'')) + '(' + params1 + ')';\n\n        case 'FunctionExpression':\n            var params2 = _.map(node.params, 'name').join(',');\n            return 'function ' + (!(!(node.id && node.id.name) && !'')) + '(' + params2 + ')';\n\n        default:\n            return node.type;\n    }\n};\n\nclass AstVisualizer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            treeData: [],\n        };\n\n    }\n\n    componentDidMount() {\n        this.setState({treeData: this.buildTree(this.props.ast)})\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({treeData: this.buildTree(nextProps.ast)})\n    }\n\n    recursiveBuilder = (node) => {\n        let children = getChildren(node);\n        let tree = [];\n        if (children === [])\n            return children;\n        children.forEach((child) => {\n            tree.push({\n                title: getLabel(child),\n                children: this.recursiveBuilder(child),\n                expanded: true,\n                type: child.type,\n                start: child.start,\n                end: child.end\n            });\n        });\n        return tree\n    };\n\n    buildTree = (ast) => {\n        let tree = [];\n        tree.push({\n            title: getLabel(ast),\n            children: this.recursiveBuilder(ast),\n            expanded: true,\n            type: ast.type,\n            start: ast.start,\n            end: ast.end\n        });\n        return tree\n    };\n\n    highlightCode = (start, end) => {\n        let codeEditor = this.props.cm.editor.doc;\n        const fromIndex = codeEditor.posFromIndex(start);\n        const toIndex = codeEditor.posFromIndex(end);\n        codeEditor.markText(fromIndex, toIndex, {\n            className: 'highlighted-code'\n        });\n    };\n\n    clearHighlightedCode = () => {\n        this.props.cm.editor.doc.getAllMarks().forEach((m) => {\n            m.clear()\n        })\n    };\n\n    render() {\n        return (\n            <SortableTree\n                treeData={this.state.treeData}\n                onChange={treeData => this.setState({treeData})}\n                canDrag={false}\n                generateNodeProps={({node}) => {\n                    return {\n                        className: node.type,\n                        onMouseEnter: () => this.highlightCode(node.start, node.end),\n                        onMouseLeave: () => this.clearHighlightedCode()\n                    };\n                }}\n            />\n        );\n    }\n}\n\nexport default AstVisualizer;","import React from 'react';\nimport Anime from 'react-anime';\nimport styled from 'styled-components'\nimport CLogo from \"../Images/c-programming.png\";\n\nconst Image = styled.div`\n    content: ${({url}) => 'url(' + url + ');'}\n    width: 40vmin;\n    margin: 10vh auto;\n`\nconst AppTitle = styled.div`\n    text-align: center;\n    font-weight: 300;\n    font-size: calc(12px + 3.6vw);\n    letter-spacing: 1.8px;\n    margin-top: 40px;\n    border: medium none;\n    margin-bottom: 20px;\n`\nconst AppDescription = styled.div`\n    text-align: center;\n    font-weight: 300;\n    margin: 0px auto;\n    font-size: calc(8px + 0.91vw);\n`\nconst Container = styled.div`\n`\n\nexport default function FrontPage() {\n\n    return (\n        <Container>\n            <Anime easing=\"easeOutCubic\"\n                   duration={2000}\n                   direction=\"alternate\"\n                   loop={true}\n                   scale={.9}>\n                <div>\n                    <Anime rotate={\"360deg\"}\n                           loop={true}\n                           delay={6000}\n                           duration={4000}>\n                        <Image url={CLogo}/>\n                    </Anime>\n                </div>\n            </Anime>\n            <AppTitle>The Ultimate SIMD visualizer</AppTitle>\n            <AppDescription>Built by <strong>Jérémie Piotte</strong> and <strong>Pierre Marie\n                Ntang</strong></AppDescription>\n        </Container>\n    );\n}","import React, {Component} from 'react';\nimport styled from \"styled-components\";\nimport SadRobot from \"../Images/cryingboy.svg\";\n\nconst ErrorPageContainer = styled.div`\n    padding: 50px;\n`\n\nconst TextJumbo = styled.div`\n    font-size: 60px;\n    font-weight: 700;\n    color: rgb(72, 72, 72);\n    margin-bottom: 15px;\n`\n\nconst ErrorMessage = styled.div`\n    font-size: 32px;\n    font-weight: normal;\n    color: rgb(72, 72, 72);\n    margin-bottom: 15px;\n    margin-top: 25px;\n`\n\nconst ErrorPosition = styled.div`\n    font-size: 14px;\n    font-weight: bold;\n    color: #767676;\n    margin-bottom: 15px;\n    margin-top: 25px;\n`\nconst Robot = styled.img`\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    width: 50vh;\n`\n\nclass ErrorHandler extends Component {\n\n    constructor(props) {\n        super(props)\n        console.log(props.error)\n        if (props.error.length !== 0) {\n            this.highlightCode()\n        }\n    }\n\n    componentWillUnmount() {\n        this.clearHighlightedCode()\n    }\n\n    highlightCode = () => {\n        const line = this.props.error[0].tag.line - 1;\n        const lineLength = this.props.cm.editor.getLine(line).length;\n        this.props.cm.editor.doc.markText({line, ch: 0}, {line, ch: lineLength}, {\n            className: 'highlighted-code'\n        });\n    };\n\n    clearHighlightedCode = () => {\n        this.props.cm.editor.doc.getAllMarks().forEach((m) => {\n            m.clear()\n        })\n    };\n\n    getErrorMessage = () => {\n        return this.props.error[0].tag.text;\n    }\n    getErrorPosition = () => {\n        return <div>\n            <p>Line: {this.props.error[0].tag.line} </p>\n            <p> Column: {this.props.error[0].tag.column} </p>\n        </div>\n\n    }\n\n    render() {\n        return (\n            <ErrorPageContainer>\n                <TextJumbo>Oops!</TextJumbo>\n                <ErrorMessage>\n                    {this.getErrorMessage()}\n                </ErrorMessage>\n                <ErrorPosition>\n                    {this.getErrorPosition()}\n                </ErrorPosition>\n                <Robot src={SadRobot}/>\n            </ErrorPageContainer>\n        );\n    }\n}\n\nexport default ErrorHandler;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from \"react\";\nimport \"../css/Tabs.css\"\n\nexport class Tabs extends Component {\n    state = {\n        selected: this.props.selected\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.props !== nextProps || this.state !== nextState;\n    }\n\n    handleClick = (index, event) => {\n        event.preventDefault();\n        this.setState({\n            selected: index\n        });\n    }\n    _renderTitles = () => {\n        function labels(child, index) {\n            var activeClass = (this.state.selected === index ? 'active' : '');\n            return (\n                <li key={index}>\n                    <a href=\"#\"\n                       className={activeClass}\n                       onClick={this.handleClick.bind(this, index)}>\n                        {child.props.label}\n                    </a>\n                </li>\n            );\n        }\n\n        return (\n            <ul className=\"tabs__labels\">\n                {this.props.children.map(labels.bind(this))}\n            </ul>\n        );\n    };\n\n    _renderContent = () => {\n        return (\n            <div className=\"tabs__content\">\n                {this.props.children[this.state.selected]}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <div className=\"tabs\">\n                {this._renderTitles()}\n                {this._renderContent()}\n            </div>\n        );\n    }\n}\n\nexport class Pane extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.children}\n            </div>\n        );\n    }\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Anime from \"react-anime\";\nimport * as _ from \"lodash\";\n\n\nconst NB_COLS = 16;\nconst COL_SIZE = 50;\n\nconst Container = styled.div`\n  margin: 20px auto;\n  width: calc(${NB_COLS} * ${COL_SIZE}px);\n  overflow: hidden;\n  height: ${COL_SIZE + 4}px;\n  box-shadow: 3px 3px 2px rgba(0,0,0,.4);\n  background-color: var(--main);\n  color: var(--clear-text-color);\n  border-radius: 3px;\n`\n\nconst TD = styled.td`\n    border-right: 1px solid var(--gray);\n    width: ${COL_SIZE}px;\n    height: ${COL_SIZE}px;\n    // color: var(--clear-text-color);\n    text-align: center;\n    \n    :last-child{\n        border-right: none;\n    }\n`\n\nconst TdNumbers = styled.td`\n    width: ${COL_SIZE}px;\n    height: ${COL_SIZE}px;\n    text-align: center;\n`\n\nconst TdZeroes = styled.td`\n    width: ${COL_SIZE}px;\n    height: ${COL_SIZE}px;\n    text-align: center;\n    color: var(--two);\n`\n\nconst TrNumbers = styled.tr`\n    position: relative;\n    top: -${COL_SIZE + 1}px;\n    font-size: 24px;\n    font-family: monospace;\n`\n\nfunction getCells() {\n    let cells = []\n    for (let i = 0; i < NB_COLS; i++) {\n        cells.push(<TD key={i}></TD>)\n    }\n    return cells\n}\n\nfunction getNumbers() {\n    let cells = []\n    for (let i = 0; i < NB_COLS; i++) {\n        cells.push(<TdNumbers key={i}>{_.random(0, 9)}</TdNumbers>)\n    }\n    return cells\n}\n\nfunction getZeroes(qty) {\n    let cells = []\n    for (let i = 0; i < NB_COLS; i++) {\n        cells.push(<TdZeroes key={i}>{(i < NB_COLS - qty) ? \"\" : 0}</TdZeroes>)\n    }\n    return cells\n}\n\nexport default function Vpslldq({name, params}) {\n    return (\n        <Container>\n            <tbody>\n            <tr>\n                {getCells()}\n            </tr>\n            <Anime easing=\"easeOutCubic\"\n                   duration={2000}\n                   loop={false}\n                   translateX={-params[2] * COL_SIZE}\n                   delay={1000}>\n                <TrNumbers>\n                    {getNumbers()}\n                </TrNumbers>\n            </Anime>\n            <Anime easing=\"easeOutCubic\"\n                   duration={500}\n                   loop={false}\n                   translateY={-52}\n                   delay={3000}>\n                <TrNumbers>\n                    {getZeroes(params[2])}\n                </TrNumbers>\n            </Anime>\n            </tbody>\n        </Container>\n    );\n}","import React from \"react\";\n\nexport default function Vpaddd({name, params}) {\n    return (\n        <div>{name}</div>\n    );\n}","import React from \"react\";\n\nexport default function Ret({name, params}) {\n    return (\n        <div>{name}</div>\n    );\n}","import React from \"react\";\n\nexport default function UnsupportedCommand({name}) {\n    return (\n        <div>Unsupported Command: \"{name}\"</div>\n    );\n}","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FunctionContainer = styled.div`\n  padding-bottom: 20px;\n`\nconst FunctionName = styled.div`\n    font-size: 32px;\n    font-weight: normal;\n    color: rgb(72, 72, 72);\n    margin-bottom: 15px;\n    text-align: center;\n`\n\nconst FunctionBody = styled.div`\n    //padding-left: 20px;\n`\n\nexport default function Function({name, body}) {\n    return (\n        <FunctionContainer>\n            <FunctionName>{name}</FunctionName>\n            <FunctionBody>{body}</FunctionBody>\n        </FunctionContainer>\n\n    );\n}\n","import React, {Component} from 'react';\nimport Vpslldq from \"../ASMComponents/vpslldq\";\nimport Vpaddd from \"../ASMComponents/vpaddd\";\nimport Ret from \"../ASMComponents/ret\";\nimport UnsupportedCommand from \"../ASMComponents/UnsupportedCommand\";\nimport Function from \"../ASMComponents/Function\";\n\nfunction commandFactory(c) {\n    switch (c.name) {\n        case \"vpslldq\":\n            return <Vpslldq name={c.name} params={c.params}/>;\n        case \"vpaddd\":\n            return <Vpaddd name={c.name} params={c.params}/>;\n        case \"ret\":\n            return <Ret name={c.name} params={c.params}/>;\n        default:\n            return <UnsupportedCommand name={c.name}/>\n    }\n}\n\nclass AsmVisualizer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    buildGraphicStack = () => {\n        let stack = [];\n        this.props.asm.forEach((func, idx) => {\n            let commands = func.body;\n            let body = [];\n            commands.forEach(c => {\n                body.push(commandFactory(c))\n            });\n            stack.push(<Function key={idx} name={func.name} body={body}/>);\n        });\n        return stack;\n    };\n\n    render() {\n        return (\n            <div>\n                {this.buildGraphicStack()}\n            </div>\n        );\n    }\n}\n\nexport default AsmVisualizer;","import React, {Component} from 'react';\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/clike/clike.js'\nimport 'codemirror/addon/selection/mark-selection.js'\nimport '../css/App.css';\nimport styled from 'styled-components'\nimport ButtonPanel from \"./ButtonPanel\";\nimport {generateASM, generateAST} from \"../Utils/Parser\";\nimport WaitingScreen from \"./WaitingScreen\";\nimport AstVisualizer from \"./ASTVisualizer\";\nimport FrontPage from \"./FrontPage\";\nimport {compile} from \"../Utils/Compiler\";\nimport ErrorHandler from \"./ErrorHandler\";\nimport {Pane, Tabs} from \"../Utils/Tabs\";\nimport AsmVisualizer from \"./ASMVisualizer\";\n\nconst Container = styled.div`\n  display: flex;\n`\n\nconst LeftContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh\n  width: 50vw;\n  overflow: scroll;\n`\n\nconst RightContainer = styled.div`\n  width: 50vw;\n  height: 100vh;\n  overflow: hidden;\n`\n\nclass App extends Component {\n    state = {\n        code: `#include <x86intrin.h>\\n\\n__m128i PrefixSum(__m128i curr) {\\n  __m128i Add = _mm_slli_si128(curr, 4); \\n  curr = _mm_add_epi32(curr, Add);   \\n  Add = _mm_slli_si128(curr, 8);    \\n  return _mm_add_epi32(curr, Add);       \\n}\\n\\nint abc(void){\\n    return 10;\\n}`,\n        disableButtons: false,\n        status: 'compiles',\n        compiling: false,\n        ast: {},\n        clangAst: {},\n        asm: {},\n        error: [],\n    };\n\n    constructor(props) {\n        super(props)\n        this.frontPage = <FrontPage/>;\n        this.waitingScreen = <WaitingScreen/>;\n    }\n\n    handleClear = (clearCode = true) => {\n        this.setState(({code}) => ({\n            code: clearCode === true ? '' : code\n        }));\n    };\n\n    visualize = () => {\n        this.setState({compiling: true});\n        this.setState({ast: generateAST(this.cm.editor)});\n        compile(this.cm.editor.getValue(), (error, asm, ast) => {\n            if (error.length === 0) {\n                asm = generateASM(asm);\n                this.setState({compiling: false, status: 'compiles', error, clangAst: ast, asm});\n            }\n            else {\n                this.setState({compiling: false, status: 'error', error, clangAst: {}, asm: {}});\n            }\n        })\n    };\n\n    serialize = () => {\n\n    };\n\n    restart = () => {\n        this.setState({\n            compiling: false,\n            ast: {},\n            clangAst: {},\n            asm: {},\n            error: []\n        });\n    };\n\n    render() {\n        const {code, disableButtons, status, compiling} = this.state;\n        let rightPage = this.frontPage;\n        if (compiling) {\n            rightPage = this.waitingScreen;\n        }\n        else if (this.state.error.length > 0) {\n            rightPage = <ErrorHandler cm={this.cm} error={this.state.error}/>\n        }\n        else if (Object.keys(this.state.ast).length > 0) {\n            rightPage =\n                <Tabs selected={0}>\n                    <Pane label=\"Graphical\">\n                        <AsmVisualizer cm={this.cm} asm={this.state.asm}/>\n                    </Pane>\n                    <Pane label=\"AST\">\n                        <AstVisualizer cm={this.cm} ast={this.state.ast}/>\n                    </Pane>\n                </Tabs>\n        }\n\n        return (\n            <Container>\n                <LeftContainer>\n                    <ButtonPanel\n                        visualize={this.visualize}\n                        serialize={this.serialize}\n                        restart={this.restart}\n                        disabled={disableButtons}\n                        status={status}\n                    />\n                    <CodeMirror\n                        ref={(cm) => this.cm = cm}\n                        value={code}\n                        options={{\n                            mode: 'text/x-csrc',\n                            theme: 'material',\n                            lineNumbers: true,\n                            lineWrapping: true,\n                            gutters: [\"CodeMirror-lint-markers\"],\n                        }}\n                        onBeforeChange={(editor, data, code) => {\n                            if (code === '') {\n                                this.handleClear(true)\n                            } else {\n                                this.setState({code})\n                                //this.myInterpreter = getInterpreter(code)\n                            }\n                        }}\n                        onPaste={() => {\n                            this.handleClear(false)\n                        }}\n                    />\n                </LeftContainer>\n                <RightContainer>\n                    {rightPage}\n                </RightContainer>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import * as request from 'request';\n\n\n//Callback must be -> callback(error, asm, ast)\nexport function compile(code, callback) {\n    let options = {\n        url: 'https://godbolt.org/api/compiler/cclang700/compile',\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        json: true,\n        body: {\n            \"source\": code,\n            \"compiler\": \"cclang700\",\n            \"options\": {\n                \"userArguments\": \"-O3 -march=native\",\n                \"compilerOptions\": {\n                    \"produceGccDump\": {},\n                    \"produceCfg\": false,\n                    \"produceAst\": true\n                },\n                \"filters\": {\n                    \"binary\": false,\n                    \"execute\": false,\n                    \"labels\": true,\n                    \"directives\": true,\n                    \"commentOnly\": true,\n                    \"trim\": true,\n                    \"intel\": true,\n                    \"demangle\": true\n                }\n            },\n            \"lang\": \"c\"\n        }\n    };\n    request(options, (error, response, body) => {\n        callback(body.stderr, body.asm, body.astOutput)\n    })\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}