{"version":3,"sources":["Images/cog.svg","Images/c-programming.png","Images/cryingboy.svg","Utils/index.js","components/CodeStatus.js","components/ButtonPanel.js","Utils/Parser.js","components/WaitingScreen.js","components/ASTVisualizer.js","components/FrontPage.js","components/ErrorHandler.js","Utils/Tabs.js","Utils/Registry.js","ASMComponents/Vector.js","ASMComponents/vpslldq.js","ASMComponents/vpaddd.js","ASMComponents/ret.js","ASMComponents/UnsupportedCommand.js","ASMComponents/Function.js","ASMComponents/SequentialComponent.js","components/ASMVisualizer.js","components/App.js","Utils/Compiler.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","getFlatColors","main","getComputedStyle","document","documentElement","getPropertyValue","darkMain","one","two","three","four","five","gray","clearTextColor","DarkTextColor","Status","styled","div","_templateObject","_ref","bg","CodeStatus","_ref2","_ref2$status","status","color","message","react_default","a","createElement","ButtonPanelContainer","ButtonPanel_templateObject","Top","_templateObject2","Buttons","_templateObject3","ButtonPanel","visualize","serialize","restart","_ref$disabled","disabled","onClick","testASR","Node","type","name","line","Object","classCallCheck","this","functionName","Cog","WaitingScreen_templateObject","url","WaitingScreen","react_anime_default","loop","easing","rotate","duration","cog","getChildren","node","body","declarations","init","id","expression","left","right","callee","arguments","object","property","properties","key","value","argument","test","consequent","alternate","getLabel","raw","operator","params1","_","params","join","params2","AstVisualizer","props","_this","possibleConstructorReturn","getPrototypeOf","call","recursiveBuilder","children","tree","forEach","child","push","title","expanded","start","end","buildTree","ast","highlightCode","codeEditor","cm","editor","doc","fromIndex","posFromIndex","toIndex","markText","className","clearHighlightedCode","getAllMarks","m","clear","state","treeData","setState","nextProps","_this2","index_esm","onChange","canDrag","generateNodeProps","onMouseEnter","onMouseLeave","Component","Image","FrontPage_templateObject","AppTitle","FrontPage_templateObject2","AppDescription","FrontPage_templateObject3","Container","_templateObject4","FrontPage","direction","scale","delay","CLogo","ErrorPageContainer","ErrorHandler_templateObject","TextJumbo","ErrorHandler_templateObject2","ErrorMessage","ErrorHandler_templateObject3","ErrorPosition","ErrorHandler_templateObject4","Robot","img","_templateObject5","ErrorHandler","error","tag","lineLength","getLine","length","ch","getErrorMessage","text","getErrorPosition","column","console","log","src","SadRobot","Tabs","_Component","_getPrototypeOf2","_len","args","Array","_key","apply","concat","selected","handleClick","index","event","preventDefault","_renderTitles","map","activeClass","href","bind","label","assertThisInitialized","_renderContent","inherits","createClass","nextState","Pane","_Component2","VAR_SIZE","TYPE_LENGTH","x","y","z","instance","Registry","set","register","array","_this$_keys$idx","idx","substring","_keys","splice","toConsumableArray","get","slice","fill","freeze","VectorContainer","table","Vector_templateObject","nbCols","colLen","colHeight","TD","td","Vector_templateObject2","_ref3","_ref4","Vector","cols","i","defaultProps","TdNumbers","vpslldq_templateObject","TdZeroes","vpslldq_templateObject2","_ref5","_ref6","TrNumbers","tr","vpslldq_templateObject3","_ref7","SHIFT_INDEX","INPUT_INDEX","Vpslldq","registry","shiftLen","input","output","computeCommand","numbersRef","React","createRef","zeroesRef","timeline","anime","autoplay","add","targets","current","translateX","translateY","_output","_this$state","Vector_Vector","ref","e","toString","vpaddd_templateObject","vpaddd_templateObject2","Operator","vpaddd_templateObject3","INPUT1_INDEX","INPUT2_INDEX","OUTPUT_INDEX","Vpaddd","input1","input2","numbers1Ref","numbers2Ref","actualNumbersRef","offset","opacity","childNodes","round","update","progress","innerHTML","_this$state2","vpaddd_TrNumbers","vpaddd_TdNumbers","ret_templateObject","ret_templateObject2","RetContainer","ret_templateObject3","width","Ret","returnValue","boxShadow","ret_TrNumbers","ret_TdNumbers","UnsupportedCommand","FunctionContainer","Function_templateObject","FunctionName","Function_templateObject2","Function","SequentialComponent_templateObject","SequentialComponent","isHover","undefined","component","onEnter","hoverHighlight","c","isLoop","onLeave","seek","Infinity","container","onComplete","sequentialHighlight","childAnimation","getAnimation","animeRef","complete","timelineFinished","finished","then","allAnimationCompleted","shouldBeVisible","play","pause","SequentialComponent_Container","cloneElement","ButtonContainer","ASMVisualizer_templateObject","AsmVisualizer","buildGraphicStack","stack","asm","func","commands","Function_Function","command","vpslldq_Vpslldq","vpaddd_Vpaddd","ret_Ret","commandFactory","getButtons","buttons","index_es","icon","reactstrap_es","button","increment","setTimeout","componentDonePlaying","_this3","_this4","SequentialComponent_SequentialComponent","App_templateObject","LeftContainer","App_templateObject2","RightContainer","App_templateObject3","App","code","disableButtons","compiling","clangAst","handleClear","clearCode","callback","JSON","parse","getValue","rawAsm","currentFunction","exec","trim","replace","split","source","generateASM","request","method","headers","content-type","json","compiler","options","userArguments","compilerOptions","produceGccDump","produceCfg","produceAst","filters","binary","execute","labels","directives","commentOnly","intel","demangle","lang","response","alert","stderr","astOutput","frontPage","waitingScreen","asmVisualizer","astVisualizer","ASMVisualizer","components_ASTVisualizer","rightPage","components_ErrorHandler","keys","Tabs_Tabs","Tabs_Pane","App_Container","react_codemirror2","mode","theme","lineNumbers","lineWrapping","gutters","onBeforeChange","data","onPaste","Boolean","window","location","hostname","match","library","faPlay","faPause","faForward","faBackward","faSyncAlt","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cfe2eb44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cog.db8a661b.svg\";","module.exports = __webpack_public_path__ + \"static/media/c-programming.b504359c.png\";","module.exports = __webpack_public_path__ + \"static/media/cryingboy.e11ebe8a.svg\";","export function getFlatColors() {\r\n    return {\r\n        main: getComputedStyle(document.documentElement).getPropertyValue('--main'),\r\n        darkMain: getComputedStyle(document.documentElement).getPropertyValue('--dark-main'),\r\n        one: getComputedStyle(document.documentElement).getPropertyValue('--one'),\r\n        two: getComputedStyle(document.documentElement).getPropertyValue('--two'),\r\n        three: getComputedStyle(document.documentElement).getPropertyValue('--three'),\r\n        four: getComputedStyle(document.documentElement).getPropertyValue('--four'),\r\n        five: getComputedStyle(document.documentElement).getPropertyValue('--five'),\r\n        gray: getComputedStyle(document.documentElement).getPropertyValue('--gray'),\r\n        clearTextColor: getComputedStyle(document.documentElement).getPropertyValue('--clear-text-color'),\r\n        DarkTextColor: getComputedStyle(document.documentElement).getPropertyValue('--dark-text-color')\r\n    }\r\n}","import React from \"react\";\r\nimport styled from 'styled-components'\r\nimport {getFlatColors} from \"../Utils\";\r\n\r\nconst Status = styled.div`\r\n  background: ${({bg}) => bg};\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  font-weight: 300\r\n  font-size: 14px;\r\n  padding: 5px;\r\n  padding-left: 10px;\r\n  margin-bottom: 5px;\r\n\r\n  > span {\r\n    font-weight: 500;\r\n    margin-left: 10px;\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    font-size: 8px;\r\n  }\r\n`\r\n\r\nexport default function CodeStatus({status = 'compiles'}) {\r\n    let color = '';\r\n    let message = '';\r\n    if (status === 'compiles') {\r\n        color = getFlatColors().five;\r\n        message = 'Code status: Compiles..';\r\n    }\r\n    else if (status === 'error') {\r\n        color = getFlatColors().two;\r\n        message = 'Code status: Error..';\r\n    }\r\n    else if (status === 'warning') {\r\n        color = getFlatColors().four;\r\n        message = 'Code status: warning..';\r\n    }\r\n\r\n    return (\r\n        <Status bg={color}>\r\n            {message}\r\n        </Status>\r\n    );\r\n}","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport CodeStatus from \"./CodeStatus\";\r\n\r\nconst ButtonPanelContainer = styled.div`\r\n  background: #1F292E;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Top = styled.div`\r\n  padding: 3px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 10px;\r\n`\r\n\r\nconst Buttons = styled.div`\r\n  > button {\r\n    border: none;\r\n    background: none;\r\n    color: #fff;\r\n    font-size: 18px;\r\n    padding: 8px;\r\n    text-shadow: -1px -1px 1px rgba(255,255,255,.1), 1px 1px 1px rgba(0,0,0,.5);\r\n\r\n    @media (max-width: 700px) {\r\n      font-size: 10px;\r\n    }\r\n  }\r\n\r\n  > button:hover {\r\n    color: #fff;\r\n    cursor: pointer;\r\n  }\r\n\r\n  > button:disabled {\r\n    color: #919191;\r\n  }\r\n\r\n  > button:active {\r\n    color: #fff;\r\n    text-shadow: none;\r\n  }\r\n`\r\n\r\nexport default function ButtonPanel({visualize, serialize, restart, disabled = false, status}) {\r\n    return (\r\n        <ButtonPanelContainer>\r\n            <Top>\r\n                <Buttons>\r\n                    <button disabled={disabled} onClick={visualize}>Visualize</button>\r\n                    <button onClick={serialize}>Serialize</button>\r\n                    <button onClick={restart}>Restart</button>\r\n                </Buttons>\r\n            </Top>\r\n            <CodeStatus status={status}/>\r\n        </ButtonPanelContainer>\r\n    );\r\n}","//import * as acorn from \"acorn\";\r\n\r\n\r\nconst testASR = `{\"type\": \"Program\",\\n  \"start\": 0,\\n  \"end\": 198,\\n  \"body\": [\\n    {\\n      \"type\": \"ImportDeclaration\",\\n      \"start\": 0,\\n      \"end\": 20,\\n      \"specifiers\": [],\\n      \"source\": {\\n        \"type\": \"Literal\",\\n        \"start\": 7,\\n        \"end\": 20,\\n        \"value\": \"x86intrin.h\",\\n        \"raw\": \"\\\\\"x86intrin.h\\\\\"\"\\n      }\\n    },\\n    {\\n      \"type\": \"FunctionDeclaration\",\\n      \"start\": 22,\\n      \"end\": 198,\\n      \"id\": {\\n        \"type\": \"Identifier\",\\n        \"start\": 31,\\n        \"end\": 40,\\n        \"name\": \"PrefixSum\"\\n      },\\n      \"generator\": false,\\n      \"expression\": false,\\n      \"params\": [\\n        {\\n          \"type\": \"Identifier\",\\n          \"start\": 41,\\n          \"end\": 45,\\n          \"name\": \"curr\"\\n        }\\n      ],\\n      \"body\": {\\n        \"type\": \"BlockStatement\",\\n        \"start\": 47,\\n        \"end\": 198,\\n        \"body\": [\\n          {\\n            \"type\": \"VariableDeclaration\",\\n            \"start\": 53,\\n            \"end\": 87,\\n            \"declarations\": [\\n              {\\n                \"type\": \"VariableDeclarator\",\\n                \"start\": 57,\\n                \"end\": 86,\\n                \"id\": {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 57,\\n                  \"end\": 60,\\n                  \"name\": \"Add\"\\n                },\\n                \"init\": {\\n                  \"type\": \"CallExpression\",\\n                  \"start\": 63,\\n                  \"end\": 86,\\n                  \"callee\": {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 63,\\n                    \"end\": 77,\\n                    \"name\": \"_mm_slli_si128\"\\n                  },\\n                  \"arguments\": [\\n                    {\\n                      \"type\": \"Identifier\",\\n                      \"start\": 78,\\n                      \"end\": 82,\\n                      \"name\": \"curr\"\\n                    },\\n                    {\\n                      \"type\": \"Literal\",\\n                      \"start\": 84,\\n                      \"end\": 85,\\n                      \"value\": 4,\\n                      \"raw\": \"4\"\\n                    }\\n                  ]\\n                }\\n              }\\n            ],\\n            \"kind\": \"let\"\\n          },\\n          {\\n            \"type\": \"ExpressionStatement\",\\n            \"start\": 92,\\n            \"end\": 124,\\n            \"expression\": {\\n              \"type\": \"AssignmentExpression\",\\n              \"start\": 92,\\n              \"end\": 123,\\n              \"operator\": \"=\",\\n              \"left\": {\\n                \"type\": \"Identifier\",\\n                \"start\": 92,\\n                \"end\": 96,\\n                \"name\": \"curr\"\\n              },\\n              \"right\": {\\n                \"type\": \"CallExpression\",\\n                \"start\": 99,\\n                \"end\": 123,\\n                \"callee\": {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 99,\\n                  \"end\": 112,\\n                  \"name\": \"_mm_add_epi32\"\\n                },\\n                \"arguments\": [\\n                  {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 113,\\n                    \"end\": 117,\\n                    \"name\": \"curr\"\\n                  },\\n                  {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 119,\\n                    \"end\": 122,\\n                    \"name\": \"Add\"\\n                  }\\n                ]\\n              }\\n            }\\n          },\\n          {\\n            \"type\": \"ExpressionStatement\",\\n            \"start\": 129,\\n            \"end\": 159,\\n            \"expression\": {\\n              \"type\": \"AssignmentExpression\",\\n              \"start\": 129,\\n              \"end\": 158,\\n              \"operator\": \"=\",\\n              \"left\": {\\n                \"type\": \"Identifier\",\\n                \"start\": 129,\\n                \"end\": 132,\\n                \"name\": \"Add\"\\n              },\\n              \"right\": {\\n                \"type\": \"CallExpression\",\\n                \"start\": 135,\\n                \"end\": 158,\\n                \"callee\": {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 135,\\n                  \"end\": 149,\\n                  \"name\": \"_mm_slli_si128\"\\n                },\\n                \"arguments\": [\\n                  {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 150,\\n                    \"end\": 154,\\n                    \"name\": \"curr\"\\n                  },\\n                  {\\n                    \"type\": \"Literal\",\\n                    \"start\": 156,\\n                    \"end\": 157,\\n                    \"value\": 8,\\n                    \"raw\": \"8\"\\n                  }\\n                ]\\n              }\\n            }\\n          },\\n          {\\n            \"type\": \"ReturnStatement\",\\n            \"start\": 164,\\n            \"end\": 196,\\n            \"argument\": {\\n              \"type\": \"CallExpression\",\\n              \"start\": 171,\\n              \"end\": 195,\\n              \"callee\": {\\n                \"type\": \"Identifier\",\\n                \"start\": 171,\\n                \"end\": 184,\\n                \"name\": \"_mm_add_epi32\"\\n              },\\n              \"arguments\": [\\n                {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 185,\\n                  \"end\": 189,\\n                  \"name\": \"curr\"\\n                },\\n                {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 191,\\n                  \"end\": 194,\\n                  \"name\": \"Add\"\\n                }\\n              ]\\n            }\\n          }\\n        ]\\n      }\\n    }\\n  ],\\n  \"sourceType\": \"module\"\\n}`\r\nclass Node {\r\n    constructor(type, name, line) {\r\n        this.type = type;\r\n        this.name = name;\r\n        this.line = line;\r\n    }\r\n}\r\n\r\nexport function generateAST(editor) {\r\n    //let code = editor.doc.getValue();\r\n    // code = cleanExpression(code);\r\n    // let ast = new Node(\"Program\", 0, code.length);\r\n    // ast.body = recursiveASTBuilder(code, 0, 0);\r\n\r\n    //code = code.replace(new RegExp('int', 'g'), 'let');\r\n\r\n    //return acorn.parse(code)\r\n\r\n    //Temporary.. We disable AST parsing.. We\"ll come back to AST later.\r\n    return JSON.parse(testASR)\r\n}\r\n\r\nconst functionName = /([a-zA-Z]+): # @.*/;\r\n\r\n\r\nexport function generateASM(rawAsm) {\r\n    let asm = [];\r\n    let currentFunction = {};\r\n    rawAsm.forEach(line => {\r\n        if (functionName.test(line.text)) {\r\n            let name = functionName.exec(line.text)[1];\r\n            currentFunction = new Node(\"Function\", name, 0);\r\n            currentFunction.body = [];\r\n            asm.push(currentFunction);\r\n        }\r\n        else if (line.text.length > 0) {\r\n            // Remove comments, commas, trim it and then split\r\n            let command = line.text.trim().replace(/,| #.*/g, '').split(\" \");\r\n            let name = command[0];\r\n            let params = command.slice(1, command.length);\r\n\r\n            let node = new Node(\"Command\", name, line.source.line);\r\n            node.params = params;\r\n            currentFunction.body.push(node);\r\n        }\r\n    });\r\n    return asm\r\n}\r\n\r\n\r\n// function recursiveASTBuilder(code, start) {\r\n//     let ast = [];\r\n//\r\n//     if (isAssignExpr(code)) {\r\n//         let tokens = getAssignExpr(code);\r\n//         let end = start + code.length;\r\n//         let node = new Node(\"VariableDeclaration\", start, end)\r\n//         node.kind = tokens[1];\r\n//         console.log(tokens);\r\n//         ast.push(node)\r\n//     }\r\n//     if (isFuncDeclaration(code)) {\r\n//         let tokens = getFuncDeclaration(code);\r\n//         let end = start + code.length;\r\n//         let node = new Node(\"FunctionDeclaration\", start, end)\r\n//         ast.push(node)\r\n//     }\r\n//     if (isFuncCall(code)) {\r\n//         let tokens = getFuncCall(code);\r\n//         let end = start + code.length;\r\n//         let node = new Node(\"FunctionCall\", start, end)\r\n//         ast.push(node)\r\n//     }\r\n//     if (isReturnExpr(code)) {\r\n//         let tokens = getReturnExpr(code);\r\n//         let end = start + code.length;\r\n//         let node = new Node(\"ReturnExpression\", start, end)\r\n//         ast.push(node)\r\n//     }\r\n//\r\n//\r\n//     return ast;\r\n// }\r\n//\r\n// function cleanExpression(s){ //just supress superfluous space and other invisible characters\r\n//     return (s.replace(/\\s{1,}/g, ' ')).trim();\r\n// }\r\n//\r\n// function extractExpression(s){     //this function extract the different expressions of a given c code, by expression we mean a piece of code situated after a ';' or a '{' and ended either by ';' or by '}'.This extract the expressions at the \"same level\"\r\n//     s=cleanExpression(s);\r\n//     var accoladeIndication=0;\r\n//     var expresions=[];\r\n//     const delimiters=new Set([';', '}']);\r\n//     var i=s.indexOf('{')+1,lengthS=s.lastIndexOf('}'); // we first determine the begining and the ending of the piece of c code\r\n//     var  semicolonPosition=i;\r\n//     while(i<lengthS){\r\n//         if (s[i]==='{'){\r\n//             accoladeIndication++; //indicates if we are not inside an expression\r\n//         }\r\n//         if (s[i]==='}'){\r\n//             accoladeIndication--;\r\n//         }\r\n//\r\n//         if(delimiters.has(s[i]) && accoladeIndication === 0){ // if the caracter is a delimiter of expression and if we are not inside an expression\r\n//             expresions.push((s.slice(semicolonPosition+1, i)).trim()) //we extract the expression begining from the last delimiter to this delimiter\r\n//             semicolonPosition=i; // we save the position of this delimiter\r\n//         }\r\n//         i++;\r\n//     }\r\n//     return expresions;\r\n// }\r\n//\r\n// function extractParameter(s){     //this function extract the different effective parameter of a c function (call function)\r\n//     s=cleanExpression(s);\r\n//     var semicolonIndication=0;\r\n//     var expresions=[];\r\n//     const delimiters=new Set([',']);\r\n//     var i=0,lengthS=s.length; // we first determine the begining and the ending of the parameter previously extracted\r\n//     var  semicolonPosition=i;\r\n//     while(i<lengthS){\r\n//         if (s[i]==='('){\r\n//             semicolonIndication++; //indicates if we are not inside an expression\r\n//         }\r\n//         if (s[i]===')'){\r\n//             semicolonIndication--;\r\n//         }\r\n//\r\n//         if(delimiters.has(s[i]) && semicolonIndication === 0){ // if the caracter is a delimiter of expression and if we are not inside an expression\r\n//             expresions.push((s.slice(semicolonPosition, i)).trim()) //we extract the expression begining from the last delimiter to this delimiter\r\n//             semicolonPosition=i+1; // we save the position of this delimiter\r\n//         }\r\n//         i++;\r\n//         if(i===lengthS){\r\n//             expresions.push((s.slice(semicolonPosition, i)).trim()) //to take the last string\r\n//         }\r\n//     }\r\n//     return expresions;\r\n// }\r\n//\r\n// function processCCode(cCode){\r\n//     var tab=[];\r\n//     if(isSimpleExpression(cCode)){\r\n//         tab=Array.of(cCode);\r\n//         return tab;\r\n//     }\r\n//     if(regexFunctionDeclar.test(cCode)){\r\n//         var t=extractExpression(cCode);\r\n//         t.push('body');\r\n//         tab=Array.of(regexFunctionDeclar.exec(cCode)[2], ['returntype',[regexFunctionDeclar.exec(cCode)[1]]],t.reverse());\r\n//         for(var j=1; j<tab[2].length; j++){\r\n//             if (isSimpleExpression(tab[2][j])){\r\n//                 tab[2][j]=Array.of(tab[2][j]);\r\n//                 continue;\r\n//             }\r\n//             else{\r\n//                 tab[2][j]=processCCode(tab[2][j]);\r\n//             }\r\n//\r\n//         }\r\n//         return tab;\r\n//     }\r\n//\r\n//     if(regexFunctionCall.test(cCode)){\r\n//         var paramString = regexFunctionCall.exec(cCode)[2]\r\n//         var t=extractParameter(paramString);\r\n//         t.push('parameters');\r\n//         tab=Array.of(regexFunctionCall.exec(cCode)[1], t.reverse());\r\n//         for(var j=1; j<tab[1].length; j++){\r\n//             if (isSimpleExpression(tab[1][j])){\r\n//                 tab[1][j]=Array.of(tab[1][j]);\r\n//                 continue;\r\n//             }\r\n//             else{\r\n//                 tab[1][j]=processCCode(tab[1][j]);\r\n//             }\r\n//\r\n//         }\r\n//         return tab;\r\n//     }\r\n//     if(regexAssignExpr.test(cCode)){\r\n//         var regArray = regexAssignExpr.exec(cCode)\r\n//         tab=Array.of('=',[regArray[2],[regArray[1]]], [regArray[3]]);\r\n//         if (isSimpleExpression(tab[2][0])){\r\n//             tab[2][0]=Array.of(tab[2][0]);\r\n//         }\r\n//         else\r\n//         {\r\n//             tab[2][0]=processCCode(tab[2][0]);\r\n//         }\r\n//\r\n//\r\n//         return tab;\r\n//     }\r\n//     if(regexReturnExpr.test(cCode)){\r\n//         tab=Array.of('return',[regexReturnExpr.exec(cCode)[1]]);\r\n//         if (isSimpleExpression(tab[1][0])){\r\n//             tab[1][0]=Array.of(tab[1][0]);\r\n//         }\r\n//         else\r\n//         {\r\n//             tab[1][0]=processCCode(tab[1][0]);\r\n//         }\r\n//\r\n//\r\n//         return tab;\r\n//     }\r\n//\r\n//\r\n// }\r\n//\r\n// function isSimpleExpression(s){\r\n//     return !(isFuncDeclaration(s)||isFuncCall(s)||isAssignExpr(s)||isReturnExpr(s));\r\n// }\r\n//\r\n// function identifyNatureOfExpr(s){\r\n//     var regex=/^\\s*(?:void|char|uint8_t|short|int|long|float|double|signed|unsigned|Bool|Complex|__m128|__m128d|__m128i|__m256|__m256d|__m256i|__m512|__m512d|__m512i)\\s+(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*\\(\\s*(?:void|char|uint8_t|short|int|long|float|double|signed|unsigned|Bool|Complex|__m128|__m128d|__m128i|__m256|__m256d|__m256i|__m512|__m512d|__m512i)\\s+(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*(?:,(?:void|char|uint8_t|short|int|long|float|double|signed|unsigned|Bool|Complex|__m128|__m128d|__m128i|__m256|__m256d|__m256i|__m512|__m512d|__m512i)\\s+(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*)*\\s*(?:\\)\\s*(?=\\{))/;\r\n// }\r\n//\r\n// const regexFunctionDeclar=/^\\s*([_$a-zA-Z][_$a-zA-Z0-9]*)\\s+([_$a-zA-Z][_$a-zA-Z0-9]*)\\s*\\(\\s*(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s+\\*?(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*(?:,(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s+\\*?(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*)*\\s*(?:\\)\\s*(?=\\{))/;\r\n// const regexFunctionCall=/^\\s*([_$a-zA-Z][_$a-zA-Z0-9]*)\\s*\\((.*)(?=\\)$|\\)(?=;))/;\r\n// const regexReturnExpr=/^\\s*return\\s+(.*)/;\r\n// const regexAssignExpr=/^\\s*(?:([_a-zA-Z][\\._a-zA-Z0-9]*)\\s+)?([\\*_$a-zA-Z][\\._a-zA-Z0-9]*)\\s*=\\s*(.*)/;\r\n//\r\n// function isFuncDeclaration(code) {\r\n//     return regexFunctionDeclar.test(code)\r\n// }\r\n// function isFuncCall(code) {\r\n//     return regexFunctionCall.test(code)\r\n// }\r\n// function isReturnExpr(code) {\r\n//     return regexReturnExpr.test(code)\r\n// }\r\n// function isAssignExpr(code) {\r\n//     return regexAssignExpr.test(code)\r\n// }\r\n// function getFuncDeclaration(code) {\r\n//     return regexFunctionDeclar.exec(code);\r\n// }\r\n// function getFuncCall(code) {\r\n//     return regexFunctionCall.exec(code);\r\n// }\r\n// function getReturnExpr(code) {\r\n//     return regexReturnExpr.exec(code);\r\n// }\r\n// function getAssignExpr(code) {\r\n//     return regexAssignExpr.exec(code);\r\n// }\r\n","import React from 'react';\r\nimport Anime from 'react-anime';\r\nimport styled from 'styled-components'\r\nimport cog from \"../Images/cog.svg\";\r\n\r\nconst Cog = styled.div`\r\n    content: ${({url}) => 'url(' + url + ');'}\r\n    height: 40vh;\r\n    margin: 30vh auto;\r\n    color: var(--dark-main)\r\n`\r\n\r\nexport default function WaitingScreen() {\r\n\r\n    return (\r\n                <Anime loop={true}\r\n                       easing={\"linear\"}\r\n                       rotate='360deg'\r\n                       duration={4000}>\r\n                    <Cog url={cog}/>\r\n                </Anime>\r\n    );\r\n}","import React, {Component} from 'react';\r\nimport * as _ from \"lodash\";\r\nimport SortableTree from \"react-sortable-tree\";\r\nimport 'react-sortable-tree/style.css';\r\nimport '../css/ASTVisualizer.css'\r\n\r\nlet getChildren = (node) => {\r\n\r\n    switch (node.type) {\r\n\r\n        case 'Program':\r\n            return node.body;\r\n\r\n        case 'VariableDeclaration':\r\n            return node.declarations;\r\n\r\n        case 'VariableDeclarator':\r\n            return node.init ? [node.id, node.init] : [node.id];\r\n\r\n        case 'ExpressionStatement':\r\n            return [node.expression];\r\n\r\n        case 'BinaryExpression':\r\n            return [node.left, node.right];\r\n\r\n        case 'AssignmentExpression':\r\n            return [node.left, node.right];\r\n\r\n        case 'CallExpression':\r\n            return [node.callee, {type: 'arguments', arguments: node.arguments}];\r\n\r\n        case 'arguments':\r\n            return node.arguments;\r\n\r\n        case 'MemberExpression':\r\n            return [node.object, node.property];\r\n\r\n        case 'NewExpression':\r\n            return node.arguments;\r\n\r\n        case 'ObjectExpression':\r\n            return node.properties;\r\n\r\n        case 'Property':\r\n            return [node.key, node.value];\r\n\r\n        case 'FunctionDeclaration':\r\n            return [node.body];\r\n\r\n        case 'FunctionExpression':\r\n            return [node.body];\r\n\r\n        case 'BlockStatement':\r\n            return node.body;\r\n\r\n        case 'ReturnStatement':\r\n            return node.argument ? [node.argument] : [];\r\n\r\n        case 'UnaryExpression':\r\n            return [node.argument];\r\n\r\n        case 'IfStatement':\r\n            return [node.test, node.consequent];\r\n\r\n        case 'ConditionalExpression':\r\n            return [node.test, node.consequent, node.alternate];\r\n\r\n        default:\r\n            return [];\r\n    }\r\n};\r\n\r\nlet getLabel = (node) => {\r\n\r\n    switch (node.type) {\r\n\r\n        case 'Identifier':\r\n            return node.name;\r\n\r\n        case 'Literal':\r\n            return node.raw;\r\n\r\n        case 'UnaryExpression':\r\n            return node.operator;\r\n\r\n        case 'BinaryExpression':\r\n            return node.operator;\r\n\r\n        case 'AssignmentExpression':\r\n            return node.operator;\r\n\r\n        case 'FunctionDeclaration':\r\n            var params1 = _.map(node.params, 'name').join(',');\r\n            return 'function ' + (!(!(node.id && node.id.name) && !'')) + '(' + params1 + ')';\r\n\r\n        case 'FunctionExpression':\r\n            var params2 = _.map(node.params, 'name').join(',');\r\n            return 'function ' + (!(!(node.id && node.id.name) && !'')) + '(' + params2 + ')';\r\n\r\n        default:\r\n            return node.type;\r\n    }\r\n};\r\n\r\nclass AstVisualizer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            treeData: [],\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({treeData: this.buildTree(this.props.ast)})\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({treeData: this.buildTree(nextProps.ast)})\r\n    }\r\n\r\n    recursiveBuilder = (node) => {\r\n        let children = getChildren(node);\r\n        let tree = [];\r\n        if (children === [])\r\n            return children;\r\n        children.forEach((child) => {\r\n            tree.push({\r\n                title: getLabel(child),\r\n                children: this.recursiveBuilder(child),\r\n                expanded: true,\r\n                type: child.type,\r\n                start: child.start,\r\n                end: child.end\r\n            });\r\n        });\r\n        return tree\r\n    };\r\n\r\n    buildTree = (ast) => {\r\n        let tree = [];\r\n        tree.push({\r\n            title: getLabel(ast),\r\n            children: this.recursiveBuilder(ast),\r\n            expanded: true,\r\n            type: ast.type,\r\n            start: ast.start,\r\n            end: ast.end\r\n        });\r\n        return tree\r\n    };\r\n\r\n    highlightCode = (start, end) => {\r\n        let codeEditor = this.props.cm.editor.doc;\r\n        const fromIndex = codeEditor.posFromIndex(start);\r\n        const toIndex = codeEditor.posFromIndex(end);\r\n        codeEditor.markText(fromIndex, toIndex, {\r\n            className: 'highlighted-code'\r\n        });\r\n    };\r\n\r\n    clearHighlightedCode = () => {\r\n        this.props.cm.editor.doc.getAllMarks().forEach((m) => {\r\n            m.clear()\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <SortableTree\r\n                treeData={this.state.treeData}\r\n                onChange={treeData => this.setState({treeData})}\r\n                canDrag={false}\r\n                generateNodeProps={({node}) => {\r\n                    return {\r\n                        className: node.type,\r\n                        onMouseEnter: () => this.highlightCode(node.start, node.end),\r\n                        onMouseLeave: () => this.clearHighlightedCode()\r\n                    };\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default AstVisualizer;","import React from 'react';\r\nimport Anime from 'react-anime';\r\nimport styled from 'styled-components'\r\nimport CLogo from \"../Images/c-programming.png\";\r\n\r\nconst Image = styled.div`\r\n    content: ${({url}) => 'url(' + url + ');'}\r\n    width: 40vmin;\r\n    margin: 10vh auto;\r\n`\r\nconst AppTitle = styled.div`\r\n    text-align: center;\r\n    font-weight: 300;\r\n    font-size: calc(12px + 3.6vw);\r\n    letter-spacing: 1.8px;\r\n    margin-top: 40px;\r\n    border: medium none;\r\n    margin-bottom: 20px;\r\n`\r\nconst AppDescription = styled.div`\r\n    text-align: center;\r\n    font-weight: 300;\r\n    margin: 0px auto;\r\n    font-size: calc(8px + 0.91vw);\r\n`\r\nconst Container = styled.div`\r\n`\r\n\r\nexport default function FrontPage() {\r\n\r\n    return (\r\n        <Container>\r\n            <Anime easing=\"easeOutCubic\"\r\n                   duration={2000}\r\n                   direction=\"alternate\"\r\n                   loop={true}\r\n                   scale={.9}>\r\n                <div>\r\n                    <Anime rotate={\"360deg\"}\r\n                           loop={true}\r\n                           delay={6000}\r\n                           duration={4000}>\r\n                        <Image url={CLogo}/>\r\n                    </Anime>\r\n                </div>\r\n            </Anime>\r\n            <AppTitle>The Ultimate SIMD visualizer</AppTitle>\r\n            <AppDescription>Built by <strong>Jérémie Piotte</strong> and <strong>Pierre Marie\r\n                Ntang</strong></AppDescription>\r\n        </Container>\r\n    );\r\n}","import React, {Component} from 'react';\r\nimport styled from \"styled-components\";\r\nimport SadRobot from \"../Images/cryingboy.svg\";\r\n\r\nconst ErrorPageContainer = styled.div`\r\n    padding: 50px;\r\n`\r\n\r\nconst TextJumbo = styled.div`\r\n    font-size: 60px;\r\n    font-weight: 700;\r\n    color: rgb(72, 72, 72);\r\n    margin-bottom: 15px;\r\n`\r\n\r\nconst ErrorMessage = styled.div`\r\n    font-size: 32px;\r\n    font-weight: normal;\r\n    color: rgb(72, 72, 72);\r\n    margin-bottom: 15px;\r\n    margin-top: 25px;\r\n`\r\n\r\nconst ErrorPosition = styled.div`\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    color: #767676;\r\n    margin-bottom: 15px;\r\n    margin-top: 25px;\r\n`\r\nconst Robot = styled.img`\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    width: 50vh;\r\n`\r\n\r\nclass ErrorHandler extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        console.log(props.error)\r\n        if (props.error.length !== 0) {\r\n            this.highlightCode()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.clearHighlightedCode()\r\n    }\r\n\r\n    highlightCode = () => {\r\n        const line = this.props.error[0].tag.line - 1;\r\n        const lineLength = this.props.cm.editor.getLine(line).length;\r\n        this.props.cm.editor.doc.markText({line, ch: 0}, {line, ch: lineLength}, {\r\n            className: 'highlighted-code'\r\n        });\r\n    };\r\n\r\n    clearHighlightedCode = () => {\r\n        this.props.cm.editor.doc.getAllMarks().forEach((m) => {\r\n            m.clear()\r\n        })\r\n    };\r\n\r\n    getErrorMessage = () => {\r\n        return this.props.error[0].tag.text;\r\n    }\r\n    getErrorPosition = () => {\r\n        return <div>\r\n            <p>Line: {this.props.error[0].tag.line} </p>\r\n            <p> Column: {this.props.error[0].tag.column} </p>\r\n        </div>\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ErrorPageContainer>\r\n                <TextJumbo>Oops!</TextJumbo>\r\n                <ErrorMessage>\r\n                    {this.getErrorMessage()}\r\n                </ErrorMessage>\r\n                <ErrorPosition>\r\n                    {this.getErrorPosition()}\r\n                </ErrorPosition>\r\n                <Robot src={SadRobot}/>\r\n            </ErrorPageContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorHandler;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {Component} from \"react\";\r\nimport \"../css/Tabs.css\"\r\n\r\nexport class Tabs extends Component {\r\n    state = {\r\n        selected: this.props.selected\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return this.props !== nextProps || this.state !== nextState;\r\n    }\r\n\r\n    handleClick = (index, event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            selected: index\r\n        });\r\n    }\r\n    _renderTitles = () => {\r\n        function labels(child, index) {\r\n            var activeClass = (this.state.selected === index ? 'active' : '');\r\n            return (\r\n                <li key={index}>\r\n                    <a href=\"#\"\r\n                       className={activeClass}\r\n                       onClick={this.handleClick.bind(this, index)}>\r\n                        {child.props.label}\r\n                    </a>\r\n                </li>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <ul className=\"tabs__labels\">\r\n                {this.props.children.map(labels.bind(this))}\r\n            </ul>\r\n        );\r\n    };\r\n\r\n    _renderContent = () => {\r\n        return (\r\n            <div className=\"tabs__content\">\r\n                {this.props.children[this.state.selected]}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"tabs\">\r\n                {this._renderTitles()}\r\n                {this._renderContent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class Pane extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n","import * as _ from \"lodash\";\r\n\r\nexport const NB_REGISTERS = 32;\r\nexport const VAR_SIZE = 8; //Octets\r\nexport const TYPE_LENGTH = {\r\n    x: 512 / (4 * VAR_SIZE),\r\n    y: 512 / (2 * VAR_SIZE),\r\n    z: 512 / VAR_SIZE\r\n};\r\n\r\nclass Registry {\r\n    constructor() {\r\n        this._keys = new Array(NB_REGISTERS).fill(0).map(() =>\r\n            new Array(TYPE_LENGTH[\"z\"]).fill(0).map(() =>\r\n                _.random(1, 255)\r\n            )\r\n        );\r\n    }\r\n\r\n    set = (register, array) => {\r\n        const idx = +register.substring(3);\r\n        const type = register[0];\r\n\r\n        this._keys[idx].splice(0, TYPE_LENGTH[type], ...array);\r\n    };\r\n\r\n    get = (register) => {\r\n        const idx = +register.substring(3);\r\n        const type = register[0];\r\n        //return the last n elements of the register.\r\n        return this._keys[idx].slice(0, TYPE_LENGTH[type])\r\n    };\r\n\r\n    clear = () => {\r\n        this._keys.map(() =>\r\n            new Array(TYPE_LENGTH[\"z\"]).fill(0).map(() =>\r\n                _.random(1, 255)\r\n            ));\r\n    }\r\n}\r\n\r\nconst instance = new Registry();\r\nObject.freeze(instance);\r\n\r\nexport default instance;\r\n","import React, {Component} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport * as _ from \"lodash\";\r\n\r\nconst VectorContainer = styled.table`\r\n      margin: 30px auto;\r\n      width: ${({nbCols, colLen}) => (nbCols * colLen) + 'px;' }\r\n      overflow: hidden;\r\n      height: ${({colHeight}) => (colHeight) + 'px;'}\r\n      box-shadow: 3px 3px 2px rgba(0,0,0,.4);\r\n      background-color: var(--main);\r\n      color: var(--clear-text-color);\r\n      border-radius: 3px;\r\n      display: block;\r\n      position: relative;\r\n`\r\n\r\nconst TD = styled.td`\r\n    border-right: 1px solid var(--gray);\r\n    width: ${({colLen}) => colLen + 'px;'}\r\n    height: ${({colHeight}) => colHeight + 'px;'}\r\n    display: inline-flex;\r\n    // color: var(--clear-text-color);\r\n    text-align: center;\r\n    \r\n    :last-child{\r\n        border-right: none;\r\n    }\r\n`\r\n\r\nexport default class Vector extends Component {\r\n\r\n    static defaultProps = {\r\n        nbCols: 4,\r\n        colLen: 50,\r\n        colHeight: 50,\r\n        children: []\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.cols = [];\r\n        _.times(props.nbCols, i => {\r\n            this.cols.push(\r\n                <TD colLen={props.colLen}\r\n                    colHeight={props.colHeight}\r\n                    key={i}>\r\n                    {}\r\n                </TD>\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <VectorContainer nbCols={this.props.nbCols}\r\n                             colLen={this.props.colLen}\r\n                             colHeight={this.props.colHeight}>\r\n                <tbody>\r\n                <tr>\r\n                    {this.cols}\r\n                </tr>\r\n                {this.props.children}\r\n                </tbody>\r\n            </VectorContainer>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport * as Registry from \"../Utils/Registry\";\r\nimport Vector from \"./Vector\";\r\nimport * as _ from \"lodash\";\r\nimport anime from 'animejs';\r\n\r\n\r\n\r\nconst TdNumbers = styled.td`\r\n    width: ${({colLen}) => colLen}px;\r\n    height: ${({colHeight}) => colHeight}px;\r\n    text-align: center;\r\n    line-height: ${({colHeight}) => colHeight}px;\r\n`\r\n\r\nconst TdZeroes = styled.td`\r\n    width: ${({colLen}) => colLen}px;\r\n    height: ${({colHeight}) => colHeight}px;\r\n    text-align: center;\r\n    color: var(--two);\r\n    line-height: ${({colHeight}) => colHeight}px;\r\n`\r\n\r\nconst TrNumbers = styled.tr`\r\n    position: relative;\r\n    top: ${({colHeight}) => -(colHeight)}px;\r\n    //font-size: 24px;\r\n    font-family: monospace;\r\n    display: inline-flex;\r\n`\r\nconst SHIFT_INDEX = 2;\r\nconst INPUT_INDEX = 1;\r\nconst OUTPUT_INDEX = 0;\r\n\r\nexport default class Vpslldq extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let registry = Registry.default;\r\n        let shiftLen = (props.params[SHIFT_INDEX] * 8) / Registry.VAR_SIZE;\r\n        let input = registry.get(props.params[INPUT_INDEX]);\r\n        let nbCols = input.length;\r\n\r\n        this.state = {\r\n            colLen: 50,\r\n            colHeight: 50,\r\n            nbCols,\r\n            shiftLen,\r\n            input,\r\n            output: [],\r\n        };\r\n        this.computeCommand();\r\n        this.numbersRef = React.createRef();\r\n        this.zeroesRef = React.createRef()\r\n    }\r\n\r\n    getAnimation() {\r\n        let timeline = anime.timeline({\r\n            easing: \"easeOutCubic\",\r\n            loop: false,\r\n            autoplay: false\r\n        });\r\n\r\n        timeline\r\n            .add({\r\n                targets: this.numbersRef.current,\r\n                translateX: () => -this.state.shiftLen * this.state.colLen,\r\n                duration: 2000,\r\n                delay: 300\r\n            })\r\n            .add({\r\n                targets: this.zeroesRef.current,\r\n                translateY: () => -50,\r\n                duration: 500,\r\n            });\r\n        return timeline;\r\n    }\r\n\r\n    //Compute the command and set the registry.\r\n    computeCommand() {\r\n        let registry = Registry.default;\r\n        let shiftLen = (this.props.params[SHIFT_INDEX] * 8) / Registry.VAR_SIZE;\r\n        let input = registry.get(this.props.params[INPUT_INDEX]);\r\n        let output = _.cloneDeep(input);\r\n        output.push(...new Array(shiftLen).fill(0));\r\n        output = output.slice(-input.length);\r\n        registry.set(this.props.params[OUTPUT_INDEX], output);\r\n\r\n        //this.setState({output, input, shiftLen});\r\n    }\r\n\r\n    render() {\r\n        let {nbCols, colLen, colHeight, shiftLen, input} = this.state;\r\n\r\n        return (\r\n            <Vector colLen={colLen} colHeight={colHeight} nbCols={nbCols}>\r\n                <TrNumbers colHeight={colHeight} ref={this.numbersRef}>\r\n                    {input.map((e, i) =>\r\n                        <TdNumbers colLen={colLen} colHeight={colHeight} key={i}>{e.toString(16)}</TdNumbers>\r\n                    )}\r\n                </TrNumbers>\r\n                <TrNumbers colHeight={colHeight} ref={this.zeroesRef}>\r\n                    {input.map((e, i) =>\r\n                        <TdZeroes colLen={colLen} colHeight={colHeight}\r\n                                  key={i}>{(i < nbCols - shiftLen) ? \"\" : 0}</TdZeroes>\r\n                    )}\r\n                </TrNumbers>\r\n            </Vector>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport Vector from \"./Vector\";\r\nimport * as Registry from \"../Utils/Registry\";\r\nimport styled from \"styled-components\";\r\nimport anime from \"animejs\";\r\nimport * as _ from \"lodash\";\r\n\r\nconst TdNumbers = styled.td`\r\n    width: ${({colLen}) => colLen}px;\r\n    height: ${({colHeight}) => colHeight}px;\r\n    text-align: center;\r\n    line-height: ${({colHeight}) => colHeight}px;\r\n`\r\n\r\nconst TrNumbers = styled.tr`\r\n    position: relative;\r\n    top: ${({colHeight}) => -(colHeight)}px;\r\n    //font-size: 24px;\r\n    font-family: monospace;\r\n    display: inline-flex;\r\n`\r\n\r\nconst Operator = styled.div`\r\n        text-align: center;\r\n        color: var(--main);\r\n        font-size: 24px;\r\n        font-weight: 700;\r\n        font-family: monospace;\r\n    `\r\n\r\nconst INPUT1_INDEX = 1;\r\nconst INPUT2_INDEX = 2;\r\nconst OUTPUT_INDEX = 0;\r\n\r\nexport default class Vpaddd extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let registry = Registry.default;\r\n        let input1 = registry.get(props.params[INPUT1_INDEX]);\r\n        let input2 = registry.get(props.params[INPUT2_INDEX]);\r\n        let nbCols = input1.length;\r\n\r\n        this.state = {\r\n            colLen: 50,\r\n            colHeight: 50,\r\n            nbCols,\r\n            input1,\r\n            input2,\r\n            output: [],\r\n        };\r\n\r\n        //This will compute the output\r\n        this.computeCommand();\r\n        this.state.output = registry.get(props.params[OUTPUT_INDEX]);\r\n\r\n        this.numbers1Ref = React.createRef();\r\n        this.numbers2Ref = React.createRef();\r\n        this.actualNumbersRef = React.createRef();\r\n    }\r\n\r\n    getAnimation() {\r\n        let timeline = anime.timeline({\r\n            easing: \"easeOutCubic\",\r\n            loop: false,\r\n            autoplay: false\r\n        });\r\n        let {output} = this.state;\r\n\r\n        timeline\r\n            .add({\r\n                targets: this.numbers1Ref.current,\r\n                translateY: 70,\r\n                duration: 1000,\r\n                offset: 500\r\n            })\r\n            .add({\r\n                targets: this.numbers2Ref.current,\r\n                translateY: -70,\r\n                duration: 1000,\r\n                offset: 500\r\n            })\r\n            .add({\r\n                targets: this.numbers1Ref.current,\r\n                opacity: 0,\r\n                duration: 500\r\n            })\r\n\r\n        this.actualNumbersRef.current.childNodes.forEach((e, i) => {\r\n            timeline.add({\r\n                targets: e,\r\n                easing: 'easeInOutExpo',\r\n                title: output[i],\r\n                round: 1,\r\n                duration: 1000,\r\n                offset: 1500,\r\n                update: (a) => {\r\n                    if (a.progress > 0) {\r\n                        e.innerHTML = (+e.title).toString(16)\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n        return timeline;\r\n    }\r\n\r\n    //Compute the command and set the registry.\r\n    computeCommand() {\r\n        let {input1, input2} = this.state;\r\n        let registry = Registry.default;\r\n        let output = _.cloneDeep(input1);\r\n\r\n        input2.forEach((e, i) => {\r\n            output[i] += e;\r\n        });\r\n        registry.set(this.props.params[OUTPUT_INDEX], output);\r\n    }\r\n\r\n\r\n    render() {\r\n        let {nbCols, colLen, colHeight, input1, input2} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div ref={this.numbers1Ref}>\r\n                    <Vector colLen={colLen} colHeight={colHeight} nbCols={nbCols}>\r\n                        <TrNumbers colHeight={colHeight}>\r\n                            {input1.map((e, i) =>\r\n                                <TdNumbers colLen={colLen} colHeight={colHeight} key={i}>{e.toString(16)}</TdNumbers>\r\n                            )}\r\n                        </TrNumbers>\r\n                    </Vector>\r\n                </div>\r\n                <Operator>+</Operator>\r\n                <div ref={this.numbers2Ref}>\r\n                    <Vector colLen={colLen} colHeight={colHeight} nbCols={nbCols}>\r\n                        <TrNumbers colHeight={colHeight} ref={this.actualNumbersRef}>\r\n                            {input2.map((e, i) =>\r\n                                <TdNumbers colLen={colLen} colHeight={colHeight} key={i}\r\n                                           title={e.toString()}>{e.toString(16)}</TdNumbers>\r\n                            )}\r\n                        </TrNumbers>\r\n                    </Vector>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport * as Registry from \"../Utils/Registry\";\r\nimport Vector from \"./Vector\";\r\nimport anime from 'animejs';\r\n\r\n\r\nconst TdNumbers = styled.td`\r\n    width: ${({colLen}) => colLen}px;\r\n    height: ${({colHeight}) => colHeight}px;\r\n    text-align: center;\r\n    line-height: ${({colHeight}) => colHeight}px;\r\n`\r\n\r\nconst TrNumbers = styled.tr`\r\n    position: relative;\r\n    top: ${({colHeight}) => -(colHeight)}px;\r\n    //font-size: 24px;\r\n    font-family: monospace;\r\n    display: inline-flex;\r\n`\r\n\r\nconst RetContainer = styled.div`\r\n        border-radius: 3px;\r\n        width: ${({width}) => width}px;\r\n        margin: 0 auto;\r\n}\r\n`\r\n\r\n\r\nexport default class Ret extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let registry = Registry.default;\r\n        //Ret returns value on top of the stack.  For now we will assume the value is always 128 bits... (Xmm)\r\n        let returnValue = registry.get('xmm0');\r\n        let nbCols = returnValue.length;\r\n\r\n        this.state = {\r\n            colLen: 50,\r\n            colHeight: 50,\r\n            nbCols,\r\n            returnValue,\r\n        };\r\n\r\n        this.computeCommand();\r\n        this.ref = React.createRef();\r\n\r\n    }\r\n\r\n    getAnimation() {\r\n\r\n        //We make an empty timeline because sequentialComponent needs to know when to jump to the next command.\r\n        let timeline = anime.timeline({\r\n            easing: \"linear\",\r\n            autoplay: false,\r\n        });\r\n\r\n        timeline\r\n            .add({\r\n                targets: this.ref.current,\r\n                duration: 1000\r\n            });\r\n\r\n        let eternalGlow = anime.timeline({\r\n            easing: \"linear\",\r\n            loop: true,\r\n            autoplay: true,\r\n            direction: 'alternate'\r\n        });\r\n\r\n        eternalGlow\r\n            .add({\r\n                targets: this.ref.current,\r\n                boxShadow: [\"0px 0px 20px 5px var(--main)\", \"0px 0px 2px 1px var(--main)\"],\r\n                duration: 1000\r\n            });\r\n\r\n        return timeline;\r\n    }\r\n\r\n    //Compute the command and set the registry.\r\n    computeCommand() {\r\n\r\n    }\r\n\r\n    render() {\r\n        let {nbCols, colLen, colHeight, returnValue} = this.state;\r\n\r\n        return (\r\n            <RetContainer ref={this.ref} width={colLen * nbCols}>\r\n                <Vector colLen={colLen} colHeight={colHeight} nbCols={nbCols}>\r\n                    <TrNumbers colHeight={colHeight}>\r\n                        {returnValue.map((e, i) =>\r\n                            <TdNumbers colLen={colLen} colHeight={colHeight} key={i}>{e.toString(16)}</TdNumbers>\r\n                        )}\r\n                    </TrNumbers>\r\n                </Vector>\r\n            </RetContainer>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default function UnsupportedCommand({name}) {\r\n    return (\r\n        <div>Unsupported Command: \"{name}\"</div>\r\n    );\r\n}","import React, {Component} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport * as Registry from \"../Utils/Registry\";\r\n\r\nconst FunctionContainer = styled.div`\r\n  padding-top: 20px;\r\n`\r\nconst FunctionName = styled.div`\r\n    font-size: 32px;\r\n    font-weight: normal;\r\n    color: rgb(72, 72, 72);\r\n    margin-bottom: 15px;\r\n    text-align: center;\r\n`\r\n\r\nexport default class Function extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //Reset the registry because this is a new function!\r\n        let registry = Registry.default;\r\n        registry.clear()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <FunctionContainer>\r\n                <FunctionName>{this.props.name}</FunctionName>\r\n            </FunctionContainer>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport anime from 'animejs';\r\n\r\nconst Container = styled.div`\r\n  margin: 20px 0;\r\n  opacity: 0;\r\n`\r\n\r\nexport default class SequentialComponent extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        // create li DOM reference\r\n        this.container = React.createRef();\r\n        this.component = React.createRef();\r\n    }\r\n\r\n    allAnimationCompleted() {\r\n        this.props.onComplete(this.props.index);\r\n        //Remove sequential highlight since the component is done animating.\r\n        if (this.sequentialHighlight)\r\n            this.sequentialHighlight.clear();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.childAnimation = false;\r\n        let c = this.component.current;\r\n        if (c && c.getAnimation) {\r\n            this.childAnimation = c.getAnimation();\r\n        }\r\n\r\n        this.animeRef = anime({\r\n            targets: this.container.current,\r\n            easing: \"easeOutCubic\",\r\n            autoplay: false,\r\n            translateY: ['5vh', 0],\r\n            duration: 500,\r\n            delay: 800,\r\n            opacity: 1,\r\n            complete: () => {\r\n                if (this.childAnimation) {\r\n                    this.childAnimation.restart();\r\n                    this.timelineFinished = this.childAnimation.finished.then(() => this.allAnimationCompleted());\r\n                }\r\n                else\r\n                    this.props.onComplete(this.props.index)\r\n            }\r\n        });\r\n\r\n        if (this.props.shouldBeVisible) {\r\n            this.animeRef.restart()\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        if (this.props.play === true && !nextProps.play) {\r\n            if (this.childAnimation) {\r\n                this.childAnimation.pause()\r\n            }\r\n        }\r\n        else if (!this.props.play === true && nextProps.play && nextProps.shouldBeVisible) {\r\n            if (this.childAnimation) {\r\n                this.childAnimation.play()\r\n            }\r\n        }\r\n\r\n        if (!nextProps.shouldBeVisible && this.props.shouldBeVisible) {\r\n            //Component is being hidden. Rewind animation.\r\n            if (this.sequentialHighlight)\r\n                this.sequentialHighlight.clear();\r\n            this.animeRef.seek(0);\r\n            if (this.childAnimation) {\r\n                this.childAnimation.seek(0);\r\n                this.childAnimation = this.component.current.getAnimation()\r\n            }\r\n        }\r\n        if (nextProps.shouldBeVisible && !this.props.shouldBeVisible) {\r\n            //Start Animation.\r\n            this.animeRef.restart();\r\n            //Highlight code to show user, which part of the code is being represented by this animation.\r\n            this.sequentialHighlight = this.highlightCode();\r\n\r\n        }\r\n    }\r\n\r\n    highlightCode = (isHover = false) => {\r\n        let line = this.component.current.props.line;\r\n        if (line) {\r\n            const lineLength = this.props.cm.editor.getLine(line).length;\r\n            return this.props.cm.editor.doc.markText({line, ch: 0}, {line, ch: lineLength}, {\r\n                className: isHover ? 'highlighted-code' : 'sequential-highlighted-code'\r\n            });\r\n        }\r\n        return null\r\n    };\r\n\r\n    onEnter = () => {\r\n        this.hoverHighlight = this.highlightCode(true);\r\n        let c = this.component.current;\r\n        if (c && c.timeline) {\r\n            this.isLoop = c.timeline.loop;\r\n            c.timeline.loop = true;\r\n            c.timeline.restart();\r\n        }\r\n    }\r\n\r\n    onLeave = () => {\r\n        if (this.hoverHighlight) this.hoverHighlight.clear();\r\n        let c = this.component.current;\r\n        if (c && c.timeline) {\r\n            c.timeline.loop = this.isLoop;\r\n            c.timeline.restart();\r\n            c.timeline.seek(Infinity);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container\r\n                ref={this.container}\r\n                onMouseEnter={this.onEnter}\r\n                onMouseLeave={this.onLeave}\r\n            >\r\n                {React.cloneElement(this.props.component, {ref: this.component})}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport Vpslldq from \"../ASMComponents/vpslldq\";\r\nimport Vpaddd from \"../ASMComponents/vpaddd\";\r\nimport Ret from \"../ASMComponents/ret\";\r\nimport UnsupportedCommand from \"../ASMComponents/UnsupportedCommand\";\r\nimport Function from \"../ASMComponents/Function\";\r\nimport SequentialComponent from \"../ASMComponents/SequentialComponent\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport styled from \"styled-components\";\r\nimport {Row, Col} from 'reactstrap';\r\n\r\n\r\nconst ButtonContainer = styled.div`\r\n    text-align: center;\r\n`\r\n\r\n\r\nfunction commandFactory(c) {\r\n    switch (c.name) {\r\n        case \"vpslldq\":\r\n            return <Vpslldq/>;\r\n        case \"vpaddd\":\r\n            return <Vpaddd/>;\r\n        case \"ret\":\r\n            return <Ret/>;\r\n        default:\r\n            return <UnsupportedCommand/>\r\n    }\r\n}\r\n\r\nclass AsmVisualizer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idx: 0,\r\n            play: true,\r\n            restart: false\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.cm.editor.doc.getAllMarks().forEach((m) => {\r\n            m.clear()\r\n        })\r\n    }\r\n\r\n    buildGraphicStack = () => {\r\n        let stack = [];\r\n        this.props.asm.forEach((func) => {\r\n            let commands = func.body;\r\n            stack.push(<Function name={func.name}/>);\r\n            commands.forEach(c => {\r\n                let command = commandFactory(c);\r\n                stack.push(\r\n                    //c.line - 1 because line number starts at 1 and we need to start at 0.\r\n                    React.cloneElement(command, {name: c.name, params: c.params, line: c.line - 1})\r\n                );\r\n            });\r\n        });\r\n        return stack;\r\n    };\r\n\r\n    componentDonePlaying(key) {\r\n        if (this.state.play) {\r\n            let increment = key === this.state.idx ? 1 : 0;\r\n            this.setState({idx: this.state.idx + increment});\r\n        }\r\n    }\r\n\r\n    play() {\r\n        // if (!this.state.play) {\r\n        //     this.setState({idx: this.state.idx + 1});\r\n        // }\r\n        this.setState({play: true})\r\n    }\r\n\r\n    pause() {\r\n        this.setState({play: false})\r\n    }\r\n\r\n    forward() {\r\n        this.setState({idx: this.state.idx + 1});\r\n        //this.componentDonePlaying(this.state.idx - 1);\r\n    }\r\n\r\n    backward() {\r\n        this.setState({idx: this.state.idx - 1});\r\n        setTimeout(() => {\r\n            this.componentDonePlaying(this.state.idx);\r\n        })\r\n    }\r\n\r\n    restart() {\r\n        this.setState({idx: -1});\r\n        setTimeout(() => {\r\n            this.setState({play: true});\r\n            this.componentDonePlaying(-1);\r\n        })\r\n    }\r\n\r\n    getButtons = (play) => {\r\n        let buttons = [];\r\n        //buttons.push(<FontAwesomeIcon icon=\"backward\" onClick={this.backward.bind(this)}/>);\r\n\r\n        play === true ?\r\n            buttons.push(<FontAwesomeIcon icon=\"pause\" onClick={this.pause.bind(this)}/>)\r\n            :\r\n            buttons.push(<FontAwesomeIcon icon=\"play\" onClick={this.play.bind(this)}/>);\r\n\r\n        //buttons.push(<FontAwesomeIcon icon=\"forward\" onClick={this.forward.bind(this)}/>);\r\n        buttons.push(<FontAwesomeIcon icon=\"sync-alt\" onClick={this.restart.bind(this)}/>);\r\n\r\n        return (\r\n            <Row>\r\n                {\r\n                    buttons.map((button, i) => (\r\n                        <Col key={i}>\r\n                            <ButtonContainer>\r\n                                {button}\r\n                            </ButtonContainer>\r\n                        </Col>\r\n                    ))\r\n                }\r\n            </Row>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                {this.getButtons(this.state.play)}\r\n\r\n                {\r\n                    this.buildGraphicStack().map((func, index) => (\r\n                        <SequentialComponent\r\n                            key={index}\r\n                            index={index}\r\n                            component={func}\r\n                            play={this.state.play}\r\n                            shouldBeVisible={this.state.idx >= index}\r\n                            onComplete={this.componentDonePlaying.bind(this)}\r\n                            cm={this.props.cm}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AsmVisualizer;","import React, {Component} from 'react';\r\nimport {Controlled as CodeMirror} from 'react-codemirror2'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/clike/clike.js'\r\nimport 'codemirror/addon/selection/mark-selection.js'\r\nimport '../css/App.css';\r\nimport styled from 'styled-components'\r\nimport ButtonPanel from \"./ButtonPanel\";\r\nimport {generateASM, generateAST} from \"../Utils/Parser\";\r\nimport WaitingScreen from \"./WaitingScreen\";\r\nimport AstVisualizer from \"./ASTVisualizer\";\r\nimport FrontPage from \"./FrontPage\";\r\nimport {compile} from \"../Utils/Compiler\";\r\nimport ErrorHandler from \"./ErrorHandler\";\r\nimport {Pane, Tabs} from \"../Utils/Tabs\";\r\nimport AsmVisualizer from \"./ASMVisualizer\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst LeftContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh\r\n  width: 50vw;\r\n  overflow: scroll;\r\n`\r\n\r\nconst RightContainer = styled.div`\r\n  width: 50vw;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n`\r\n\r\nclass App extends Component {\r\n    state = {\r\n        code: `#include <x86intrin.h>\\n\\n__m128i PrefixSum(__m128i curr) {\\n  __m128i Add = _mm_slli_si128(curr, 4); \\n  curr = _mm_add_epi32(curr, Add);   \\n  Add = _mm_slli_si128(curr, 8);    \\n  return _mm_add_epi32(curr, Add);       \\n}`,\r\n        disableButtons: false,\r\n        status: 'compiles',\r\n        compiling: false,\r\n        ast: {},\r\n        clangAst: {},\r\n        asm: [],\r\n        error: [],\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.frontPage = <FrontPage/>;\r\n        this.waitingScreen = <WaitingScreen/>;\r\n        this.asmVisualizer = [];\r\n        this.astVisualizer = [];\r\n    }\r\n\r\n    handleClear = (clearCode = true) => {\r\n        this.setState(({code}) => ({\r\n            code: clearCode === true ? '' : code\r\n        }));\r\n    };\r\n\r\n    visualize = () => {\r\n        this.setState({compiling: true});\r\n        this.setState({ast: generateAST(this.cm.editor)});\r\n        compile(this.cm.editor.getValue(), (error, asm, ast) => {\r\n            if (error.length === 0) {\r\n                asm = generateASM(asm);\r\n                this.setState({compiling: false, status: 'compiles', error, clangAst: ast, asm});\r\n            }\r\n            else {\r\n                this.setState({compiling: false, status: 'error', error, clangAst: {}, asm: {}});\r\n            }\r\n        })\r\n    };\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n        if (nextState.asm !== this.state.asm) {\r\n            this.asmVisualizer = <AsmVisualizer cm={this.cm} asm={nextState.asm}/>;\r\n        }\r\n        if (nextState.ast !== this.state.ast) {\r\n            this.astVisualizer = <AstVisualizer cm={this.cm} ast={nextState.ast}/>;\r\n        }\r\n    }\r\n\r\n    serialize = () => {\r\n\r\n    };\r\n\r\n    restart = () => {\r\n        this.setState({\r\n            compiling: false,\r\n            ast: {},\r\n            clangAst: {},\r\n            asm: {},\r\n            error: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {code, disableButtons, status, compiling} = this.state;\r\n        let rightPage = this.frontPage;\r\n        if (compiling) {\r\n            rightPage = this.waitingScreen;\r\n        }\r\n        else if (this.state.error.length > 0) {\r\n            rightPage = <ErrorHandler cm={this.cm} error={this.state.error}/>\r\n        }\r\n        else if (Object.keys(this.state.asm).length > 0) {\r\n            rightPage = <Tabs selected={0}>\r\n                <Pane label=\"Graphical\">\r\n                    {this.asmVisualizer}\r\n                </Pane>\r\n                <Pane label=\"AST\">\r\n                    {this.astVisualizer}\r\n                </Pane>\r\n            </Tabs>\r\n        }\r\n\r\n        return (\r\n            <Container>\r\n                <LeftContainer>\r\n                    <ButtonPanel\r\n                        visualize={this.visualize}\r\n                        serialize={this.serialize}\r\n                        restart={this.restart}\r\n                        disabled={disableButtons}\r\n                        status={status}\r\n                    />\r\n                    <CodeMirror\r\n                        ref={(cm) => this.cm = cm}\r\n                        value={code}\r\n                        options={{\r\n                            mode: 'text/x-csrc',\r\n                            theme: 'material',\r\n                            lineNumbers: true,\r\n                            lineWrapping: true,\r\n                            gutters: [\"CodeMirror-lint-markers\"],\r\n                        }}\r\n                        onBeforeChange={(editor, data, code) => {\r\n                            if (code === '') {\r\n                                this.handleClear(true)\r\n                            } else {\r\n                                this.setState({code})\r\n                                //this.myInterpreter = getInterpreter(code)\r\n                            }\r\n                        }}\r\n                        onPaste={() => {\r\n                            this.handleClear(false)\r\n                        }}\r\n                    />\r\n                </LeftContainer>\r\n                <RightContainer>\r\n                    {rightPage}\r\n                </RightContainer>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import * as request from 'request';\r\n\r\n\r\n//Callback must be -> callback(error, asm, ast)\r\nexport function compile(code, callback) {\r\n    let options = {\r\n        url: 'https://godbolt.org/api/compiler/cclang700/compile',\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        json: true,\r\n        body: {\r\n            \"source\": code,\r\n            \"compiler\": \"cclang700\",\r\n            \"options\": {\r\n                \"userArguments\": \"-O3 -march=native\",\r\n                \"compilerOptions\": {\r\n                    \"produceGccDump\": {},\r\n                    \"produceCfg\": false,\r\n                    \"produceAst\": true\r\n                },\r\n                \"filters\": {\r\n                    \"binary\": false,\r\n                    \"execute\": false,\r\n                    \"labels\": true,\r\n                    \"directives\": true,\r\n                    \"commentOnly\": true,\r\n                    \"trim\": true,\r\n                    \"intel\": true,\r\n                    \"demangle\": true\r\n                }\r\n            },\r\n            \"lang\": \"c\"\r\n        }\r\n    };\r\n    request(options, (error, response, body) => {\r\n        if (error) {\r\n            alert(\"oops! https://godbolt.org/ seems to be down! \\n You will have to wait my friend.\")\r\n            callback({}, [], \"\")\r\n        }\r\n        else {\r\n            callback(body.stderr, body.asm, body.astOutput)\r\n        }\r\n    })\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//Setup FontAwesome\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faPlay, faPause, faForward, faBackward, faSyncAlt} from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faPlay, faPause, faForward, faBackward, faSyncAlt);\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}